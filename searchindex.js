Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/isfinite","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/sign","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isfinite","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/sign","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/isfinite","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/sign","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isfinite","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/sign","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isfinite","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/sign","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/sign","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/isfinite.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/sign.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isfinite.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/sign.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/isfinite.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/sign.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isfinite.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/sign.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isfinite.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/sign.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/sign.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[829,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[387,0,0,"-"],creation_functions:[388,0,0,"-"],data_type_functions:[391,0,0,"-"],data_types:[395,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[389,2,1,""],zeros:[390,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[391,1,1,""],finfo:[393,2,1,""],iinfo:[394,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[391,3,1,""],bits:[391,3,1,""],eps:[391,3,1,""],max:[391,3,1,""],min:[391,3,1,""],smallest_normal:[391,3,1,""]},"ivy.functional.backends.numpy.core":{device:[430,0,0,"-"],general:[432,0,0,"-"],gradients:[468,0,0,"-"],image:[473,0,0,"-"],linear_algebra:[477,0,0,"-"],logic:[481,0,0,"-"],math:[482,0,0,"-"],random:[484,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[431,1,1,""],clear_mem_on_dev:[430,2,1,""],dev:[430,2,1,""],dev_from_str:[430,2,1,""],dev_to_str:[430,2,1,""],gpu_is_available:[430,2,1,""],num_gpus:[430,2,1,""],to_dev:[430,2,1,""],tpu_is_available:[430,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[431,3,1,""],start:[431,3,1,""],stop:[431,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[432,2,1,""],arange:[433,2,1,""],argmax:[434,2,1,""],argmin:[435,2,1,""],array:[436,2,1,""],asarray:[432,2,1,""],astype:[432,2,1,""],cast:[437,2,1,""],ceil:[432,2,1,""],clip:[432,2,1,""],compile:[438,2,1,""],concatenate:[439,2,1,""],constant_pad:[432,2,1,""],container_types:[432,2,1,""],copy_array:[432,2,1,""],cumprod:[440,2,1,""],current_framework_str:[432,2,1,""],dtype:[441,2,1,""],dtype_bits:[442,2,1,""],dtype_from_str:[443,2,1,""],dtype_to_str:[444,2,1,""],equal:[432,2,1,""],floor:[432,2,1,""],floormod:[432,2,1,""],full:[445,2,1,""],gather:[446,2,1,""],gather_nd:[447,2,1,""],get_num_dims:[432,2,1,""],identity:[448,2,1,""],indices_where:[449,2,1,""],inplace_arrays_supported:[432,2,1,""],inplace_decrement:[450,2,1,""],inplace_increment:[451,2,1,""],inplace_update:[452,2,1,""],inplace_variables_supported:[432,2,1,""],is_array:[453,2,1,""],isfinite:[454,2,1,""],linear_resample:[455,2,1,""],linspace:[456,2,1,""],logspace:[457,2,1,""],matmul:[432,2,1,""],meshgrid:[432,2,1,""],multiprocessing:[432,2,1,""],one_hot:[458,2,1,""],ones_like:[459,2,1,""],round:[432,2,1,""],scatter_flat:[460,2,1,""],scatter_nd:[461,2,1,""],shape:[432,2,1,""],sign:[462,2,1,""],split:[463,2,1,""],squeeze:[464,2,1,""],to_list:[432,2,1,""],to_numpy:[432,2,1,""],to_scalar:[432,2,1,""],transpose:[465,2,1,""],unstack:[466,2,1,""],where:[432,2,1,""],zero_pad:[432,2,1,""],zeros_like:[467,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[469,2,1,""],is_variable:[470,2,1,""],stop_gradient:[471,2,1,""],variable:[472,2,1,""],variable_data:[468,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[474,2,1,""],gradient_image:[475,2,1,""],stack_images:[476,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[478,2,1,""],qr:[479,2,1,""],vector_to_skew_symmetric_matrix:[480,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[483,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[485,2,1,""],randint:[484,2,1,""],random_normal:[484,2,1,""],random_uniform:[484,2,1,""],seed:[484,2,1,""],shuffle:[484,2,1,""]},"ivy.functional.ivy":{array_api:[830,0,0,"-"],core:[863,0,0,"-"],nn:[1205,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[831,0,0,"-"],creation_functions:[832,0,0,"-"],data_type_functions:[835,0,0,"-"],data_types:[838,0,0,"-"],elementwise_functions:[839,0,0,"-"],function_and_method_signatures:[850,0,0,"-"],linear_algebra:[851,0,0,"-"],manipulation_functions:[853,0,0,"-"],searching_functions:[855,0,0,"-"],set_functions:[856,0,0,"-"],sorting_functions:[857,0,0,"-"],statistical_functions:[859,0,0,"-"],utility_functions:[860,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[831,4,1,""],nan:[831,4,1,""],pi:[831,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[833,2,1,""],zeros:[834,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[836,2,1,""],iinfo:[837,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[840,2,1,""],bitwise_and:[841,2,1,""],cos:[842,2,1,""],cosh:[843,2,1,""],isfinite:[844,2,1,""],isnan:[845,2,1,""],less:[846,2,1,""],log2:[847,2,1,""],logical_not:[848,2,1,""],sqrt:[849,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{vector_norm:[852,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[854,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[858,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[861,2,1,""],any:[862,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[864,0,0,"-"],compilation:[903,0,0,"-"],device:[905,0,0,"-"],dtype:[955,0,0,"-"],general:[979,0,0,"-"],gradients:[1079,0,0,"-"],image:[1095,0,0,"-"],linalg:[1102,0,0,"-"],logic:[1110,0,0,"-"],math:[1113,0,0,"-"],meta:[1129,0,0,"-"],multi_node:[1133,0,0,"-"],nest:[1177,0,0,"-"],random:[1189,0,0,"-"],reductions:[1196,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[865,2,1,""],builtin_add:[866,2,1,""],builtin_and:[867,2,1,""],builtin_bool:[868,2,1,""],builtin_contains:[869,2,1,""],builtin_deepcopy:[870,2,1,""],builtin_dir:[871,2,1,""],builtin_eq:[872,2,1,""],builtin_float:[873,2,1,""],builtin_floordiv:[874,2,1,""],builtin_ge:[875,2,1,""],builtin_getattr:[876,2,1,""],builtin_getattribute:[877,2,1,""],builtin_getitem:[878,2,1,""],builtin_gt:[879,2,1,""],builtin_int:[880,2,1,""],builtin_invert:[881,2,1,""],builtin_le:[882,2,1,""],builtin_lt:[883,2,1,""],builtin_mul:[884,2,1,""],builtin_ne:[885,2,1,""],builtin_neg:[886,2,1,""],builtin_or:[887,2,1,""],builtin_pos:[888,2,1,""],builtin_pow:[889,2,1,""],builtin_radd:[890,2,1,""],builtin_rand:[891,2,1,""],builtin_rfloordiv:[892,2,1,""],builtin_rmul:[893,2,1,""],builtin_ror:[894,2,1,""],builtin_rpow:[895,2,1,""],builtin_rsub:[896,2,1,""],builtin_rtruediv:[897,2,1,""],builtin_rxor:[898,2,1,""],builtin_setitem:[899,2,1,""],builtin_sub:[900,2,1,""],builtin_truediv:[901,2,1,""],builtin_xor:[902,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[904,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[905,1,1,""],DevClonedItem:[907,1,1,""],DevClonedIter:[908,1,1,""],DevClonedNest:[909,1,1,""],DevDistItem:[910,1,1,""],DevDistIter:[911,1,1,""],DevDistNest:[912,1,1,""],DevManager:[905,1,1,""],DevMapper:[914,1,1,""],DevMapperMultiProc:[915,1,1,""],MultiDev:[905,1,1,""],MultiDevItem:[917,1,1,""],MultiDevIter:[918,1,1,""],MultiDevNest:[919,1,1,""],Profiler:[920,1,1,""],clear_mem_on_dev:[921,2,1,""],default_device:[922,2,1,""],dev:[923,2,1,""],dev_clone:[924,2,1,""],dev_clone_array:[925,2,1,""],dev_clone_iter:[926,2,1,""],dev_clone_nest:[927,2,1,""],dev_dist:[928,2,1,""],dev_dist_array:[929,2,1,""],dev_dist_iter:[930,2,1,""],dev_dist_nest:[931,2,1,""],dev_from_str:[932,2,1,""],dev_to_str:[933,2,1,""],dev_unify:[934,2,1,""],dev_unify_array:[935,2,1,""],dev_unify_iter:[936,2,1,""],dev_unify_nest:[937,2,1,""],dev_util:[938,2,1,""],get_all_arrays_on_dev:[939,2,1,""],gpu_is_available:[940,2,1,""],num_arrays_on_dev:[941,2,1,""],num_cpu_cores:[942,2,1,""],num_gpus:[943,2,1,""],percent_used_mem_on_dev:[944,2,1,""],print_all_arrays_on_dev:[945,2,1,""],set_default_device:[946,2,1,""],set_split_factor:[947,2,1,""],split_factor:[948,2,1,""],split_func_call:[949,2,1,""],to_dev:[950,2,1,""],total_mem_on_dev:[951,2,1,""],tpu_is_available:[952,2,1,""],unset_default_device:[953,2,1,""],used_mem_on_dev:[954,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[905,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[905,3,1,""],da_tune_step:[905,3,1,""],dim_size:[905,3,1,""],ds_tune_step:[905,3,1,""],map:[905,3,1,""],repeated_config_check:[905,3,1,""],tune_step:[905,3,1,""],tuned:[905,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[914,3,1,""],map:[914,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[915,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[905,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[917,3,1,""],items:[917,3,1,""],keys:[917,3,1,""],shape:[917,3,1,""],values:[917,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[918,3,1,""],at_dev:[918,3,1,""],at_devs:[918,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[919,3,1,""],at_dev:[919,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[920,3,1,""],start:[920,3,1,""],stop:[920,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[955,1,1,""],DefaultFloatDtype:[955,1,1,""],DefaultIntDtype:[955,1,1,""],astype:[955,2,1,""],cast:[959,2,1,""],closest_valid_dtype:[960,2,1,""],convert_dtype:[961,2,1,""],default_dtype:[962,2,1,""],default_float_dtype:[963,2,1,""],default_int_dtype:[964,2,1,""],dtype:[965,2,1,""],dtype_bits:[966,2,1,""],dtype_from_str:[967,2,1,""],dtype_to_str:[968,2,1,""],invalid_dtype:[969,2,1,""],is_float_dtype:[970,2,1,""],is_int_dtype:[971,2,1,""],set_default_dtype:[972,2,1,""],set_default_float_dtype:[973,2,1,""],set_default_int_dtype:[974,2,1,""],unset_default_dtype:[975,2,1,""],unset_default_float_dtype:[976,2,1,""],unset_default_int_dtype:[977,2,1,""],valid_dtype:[978,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[955,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[955,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[955,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1004,2,1,""],abs:[980,2,1,""],all_equal:[981,2,1,""],arange:[982,2,1,""],arg_names:[983,2,1,""],argmax:[984,2,1,""],argmin:[985,2,1,""],array:[986,2,1,""],array_equal:[987,2,1,""],arrays_equal:[988,2,1,""],asarray:[979,2,1,""],assert_supports_inplace:[989,2,1,""],broadcast_to:[990,2,1,""],cache_fn:[991,2,1,""],ceil:[992,2,1,""],clip:[993,2,1,""],clip_matrix_norm:[994,2,1,""],clip_vector_norm:[995,2,1,""],concatenate:[996,2,1,""],constant_pad:[997,2,1,""],container_types:[998,2,1,""],copy_array:[999,2,1,""],cross:[1000,2,1,""],cumprod:[1001,2,1,""],cumsum:[1002,2,1,""],current_framework_str:[1003,2,1,""],einops_rearrange:[1005,2,1,""],einops_reduce:[1006,2,1,""],einops_repeat:[1007,2,1,""],equal:[1008,2,1,""],exists:[1009,2,1,""],expand_dims:[1010,2,1,""],flip:[1011,2,1,""],floor:[1012,2,1,""],floormod:[1013,2,1,""],fourier_encode:[1014,2,1,""],full:[1015,2,1,""],gather:[1016,2,1,""],gather_nd:[1017,2,1,""],get_all_arrays_in_memory:[1018,2,1,""],get_min_base:[1019,2,1,""],get_min_denominator:[1020,2,1,""],get_num_dims:[1021,2,1,""],get_referrers_recursive:[1022,2,1,""],has_nans:[1023,2,1,""],identity:[1024,2,1,""],indices_where:[1025,2,1,""],inplace_arrays_supported:[1026,2,1,""],inplace_decrement:[1027,2,1,""],inplace_increment:[1028,2,1,""],inplace_update:[1029,2,1,""],inplace_variables_supported:[1030,2,1,""],is_array:[1031,2,1,""],isinf:[1032,2,1,""],linear_resample:[1033,2,1,""],linspace:[1034,2,1,""],logspace:[1035,2,1,""],match_kwargs:[1036,2,1,""],matmul:[1037,2,1,""],maximum:[1038,2,1,""],meshgrid:[1039,2,1,""],minimum:[1040,2,1,""],multiprocessing:[1041,2,1,""],num_arrays_in_memory:[1042,2,1,""],one_hot:[1043,2,1,""],ones:[1044,2,1,""],ones_like:[1045,2,1,""],print_all_arrays_in_memory:[1046,2,1,""],queue_timeout:[1047,2,1,""],repeat:[1048,2,1,""],reshape:[1049,2,1,""],round:[1050,2,1,""],scatter_flat:[1051,2,1,""],scatter_nd:[1052,2,1,""],set_min_base:[1053,2,1,""],set_min_denominator:[1054,2,1,""],set_queue_timeout:[1055,2,1,""],set_tmp_dir:[1056,2,1,""],shape:[1057,2,1,""],shape_to_tuple:[1058,2,1,""],sign:[1059,2,1,""],split:[1060,2,1,""],squeeze:[1061,2,1,""],stable_divide:[1062,2,1,""],stable_pow:[1063,2,1,""],stack:[1064,2,1,""],supports_inplace:[1065,2,1,""],swapaxes:[1066,2,1,""],tile:[1067,2,1,""],tmp_dir:[1068,2,1,""],to_list:[1069,2,1,""],to_numpy:[1070,2,1,""],to_scalar:[1071,2,1,""],transpose:[1072,2,1,""],try_else_none:[1073,2,1,""],unstack:[1074,2,1,""],value_is_nan:[1075,2,1,""],where:[1076,2,1,""],zero_pad:[1077,2,1,""],zeros_like:[1078,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1079,1,1,""],adam_step:[1081,2,1,""],adam_update:[1082,2,1,""],execute_with_gradients:[1083,2,1,""],gradient_descent_update:[1084,2,1,""],is_variable:[1085,2,1,""],lamb_update:[1086,2,1,""],lars_update:[1087,2,1,""],optimizer_update:[1088,2,1,""],set_with_grads:[1089,2,1,""],stop_gradient:[1090,2,1,""],unset_with_grads:[1091,2,1,""],variable:[1092,2,1,""],variable_data:[1093,2,1,""],with_grads:[1094,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1079,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1096,2,1,""],float_img_to_uint8_img:[1097,2,1,""],gradient_image:[1098,2,1,""],random_crop:[1099,2,1,""],stack_images:[1100,2,1,""],uint8_img_to_float_img:[1101,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1103,2,1,""],inv:[1104,2,1,""],matrix_norm:[1105,2,1,""],pinv:[1106,2,1,""],qr:[1107,2,1,""],svd:[1108,2,1,""],vector_to_skew_symmetric_matrix:[1109,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1111,2,1,""],logical_or:[1112,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1114,2,1,""],acosh:[1115,2,1,""],asin:[1116,2,1,""],atan2:[1118,2,1,""],atan:[1117,2,1,""],atanh:[1119,2,1,""],cosh:[1120,2,1,""],divide:[1121,2,1,""],erf:[1122,2,1,""],exp:[1123,2,1,""],log:[1124,2,1,""],sin:[1125,2,1,""],sinh:[1126,2,1,""],tan:[1127,2,1,""],tanh:[1128,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1130,2,1,""],maml_step:[1131,2,1,""],reptile_step:[1132,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1133,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1178,2,1,""],copy_nest:[1179,2,1,""],index_nest:[1180,2,1,""],map:[1181,2,1,""],map_nest_at_index:[1182,2,1,""],map_nest_at_indices:[1183,2,1,""],multi_index_nest:[1184,2,1,""],nested_indices_where:[1185,2,1,""],nested_map:[1186,2,1,""],set_nest_at_index:[1187,2,1,""],set_nest_at_indices:[1188,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1190,2,1,""],randint:[1191,2,1,""],random_normal:[1192,2,1,""],random_uniform:[1193,2,1,""],seed:[1194,2,1,""],shuffle:[1195,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1197,2,1,""],reduce_max:[1198,2,1,""],reduce_mean:[1199,2,1,""],reduce_min:[1200,2,1,""],reduce_prod:[1201,2,1,""],reduce_std:[1202,2,1,""],reduce_sum:[1203,2,1,""],reduce_var:[1204,2,1,""]},"ivy.functional.ivy.nn":{activations:[1206,0,0,"-"],layers:[1214,0,0,"-"],losses:[1227,0,0,"-"],norms:[1231,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1207,2,1,""],leaky_relu:[1208,2,1,""],relu:[1209,2,1,""],sigmoid:[1210,2,1,""],softmax:[1211,2,1,""],softplus:[1212,2,1,""],tanh:[1213,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1215,2,1,""],conv1d_transpose:[1216,2,1,""],conv2d:[1217,2,1,""],conv2d_transpose:[1218,2,1,""],conv3d:[1219,2,1,""],conv3d_transpose:[1220,2,1,""],depthwise_conv2d:[1221,2,1,""],dropout:[1222,2,1,""],linear:[1223,2,1,""],lstm_update:[1224,2,1,""],multi_head_attention:[1225,2,1,""],scaled_dot_product_attention:[1226,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1228,2,1,""],cross_entropy:[1229,2,1,""],sparse_cross_entropy:[1230,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1232,2,1,""]},"ivy.graph_compiler":{compiler:[1233,0,0,"-"],globals:[1236,0,0,"-"],graph:[1239,0,0,"-"],helpers:[1241,0,0,"-"],op_logging:[1242,0,0,"-"],param:[1243,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1234,2,1,""],show_graph:[1235,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1237,2,1,""],log_global_inference_rel_times:[1238,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1239,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1239,3,1,""],add_fn_to_dict:[1239,3,1,""],add_param:[1239,3,1,""],compiled:[1239,3,1,""],connect:[1239,3,1,""],debug_info:[1239,3,1,""],get_param:[1239,3,1,""],get_param_recursive:[1239,3,1,""],include_generators:[1239,3,1,""],increment_param_count:[1239,3,1,""],log_all_ops:[1239,3,1,""],params_all_empty:[1239,3,1,""],save_debug_info:[1239,3,1,""],set_param:[1239,3,1,""],show:[1239,3,1,""],show_debug_info:[1239,3,1,""],update_inference_times:[1239,3,1,""],with_array_caching:[1239,3,1,""]},"ivy.graph_compiler.param":{Param:[1243,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1243,3,1,""],count:[1243,3,1,""],depth:[1243,3,1,""],get:[1243,3,1,""],is_var:[1243,3,1,""],ptype:[1243,3,1,""],set:[1243,3,1,""],set_count:[1243,3,1,""],shape:[1243,3,1,""]},"ivy.stateful":{activations:[1248,0,0,"-"],converters:[1251,0,0,"-"],initializers:[1253,0,0,"-"],layers:[1262,0,0,"-"],module:[1274,0,0,"-"],norms:[1276,0,0,"-"],optimizers:[1278,0,0,"-"],sequential:[1284,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1249,1,1,""],GELU:[1250,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1249,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1250,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1252,2,1,""]},"ivy.stateful.initializers":{Constant:[1253,1,1,""],FirstLayerSiren:[1255,1,1,""],GlorotUniform:[1256,1,1,""],KaimingNormal:[1253,1,1,""],Ones:[1258,1,1,""],Siren:[1259,1,1,""],Uniform:[1253,1,1,""],Zeros:[1261,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1253,3,1,""],create_variables:[1253,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1255,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1256,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1253,3,1,""],create_variables:[1253,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1258,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1259,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1253,3,1,""],create_variables:[1253,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1261,3,1,""]},"ivy.stateful.layers":{Conv1D:[1263,1,1,""],Conv1DTranspose:[1264,1,1,""],Conv2D:[1265,1,1,""],Conv2DTranspose:[1266,1,1,""],Conv3D:[1267,1,1,""],Conv3DTranspose:[1268,1,1,""],DepthwiseConv2D:[1269,1,1,""],Dropout:[1270,1,1,""],LSTM:[1271,1,1,""],Linear:[1272,1,1,""],MultiHeadAttention:[1273,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1263,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1264,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1265,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1266,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1267,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1268,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1269,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1270,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1271,3,1,""],get_initial_state:[1271,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1272,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1273,3,1,""]},"ivy.stateful.module":{Module:[1275,1,1,""]},"ivy.stateful.module.Module":{__init__:[1275,3,1,""],build:[1275,3,1,""],build_mode:[1275,3,1,""],built:[1275,3,1,""],check_submod_rets:[1275,3,1,""],compile_graph:[1275,3,1,""],compile_on_next_step:[1275,3,1,""],get_mod_key:[1275,3,1,""],mod_depth:[1275,3,1,""],mod_height:[1275,3,1,""],mod_with_top_mod_key_chain:[1275,3,1,""],save_weights:[1275,3,1,""],show_graph:[1275,3,1,""],show_mod_in_top_mod:[1275,3,1,""],show_structure:[1275,3,1,""],show_v_in_top_v:[1275,3,1,""],sub_mods:[1275,3,1,""],track_submod_call_order:[1275,3,1,""],track_submod_rets:[1275,3,1,""],v_with_top_v_key_chains:[1275,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1277,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1277,3,1,""]},"ivy.stateful.optimizers":{Adam:[1279,1,1,""],LAMB:[1280,1,1,""],LARS:[1281,1,1,""],Optimizer:[1282,1,1,""],SGD:[1283,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1279,3,1,""],set_state:[1279,3,1,""],state:[1279,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1280,3,1,""],set_state:[1280,3,1,""],state:[1280,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1281,3,1,""],set_state:[1281,3,1,""],state:[1281,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1282,3,1,""],compile_graph:[1282,3,1,""],compile_on_next_step:[1282,3,1,""],set_state:[1282,3,1,""],show_graph:[1282,3,1,""],step:[1282,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1283,3,1,""],set_state:[1283,3,1,""],state:[1283,3,1,""]},"ivy.stateful.sequential":{Sequential:[1285,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1285,3,1,""]},"ivy.verbosity":{cprint:[1290,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1289,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1278,1279,1280],"02886":1245,"100":[1133,1245,1287],"141592653589793":831,"2021":1245,"2102":1245,"360":[839,842,1113,1125,1127],"718281828459045":831,"754":[831,835,836,839,849],"999":[1079,1081,1082,1086,1278,1279,1280],"abstract":[905,920,1245,1278,1282],"boolean":[40,41,839,841,845,848,905,940,952,955,969,978,979,981,987,988,1023,1025,1026,1030,1031,1032,1065,1075,1079,1085,1110,1111,1112,1129,1130,1131,1133],"break":43,"case":[15,18,19,40,41,42,43,839,840,905,944,951,954,979,982,1049,1051,1052,1102,1105,1107,1133,1177,1180,1184,1245,1262,1273,1274,1275,1278,1282,1291],"catch":[979,1004],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,391,430,431,835,837,905,907,908,909,910,911,912,914,915,917,918,919,920,932,933,955,979,983,1036,1079,1093,1133,1177,1179,1186,1227,1229,1230,1239,1243,1245,1248,1249,1250,1251,1252,1253,1255,1256,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287,1291],"default":[15,18,19,40,41,42,43,832,833,834,851,852,853,854,857,858,860,861,862,903,904,905,914,915,922,923,927,928,929,930,931,934,935,936,937,944,947,948,949,954,955,962,963,964,965,979,981,982,984,985,994,995,996,997,1000,1001,1002,1011,1014,1015,1016,1021,1023,1024,1033,1035,1036,1039,1041,1044,1047,1048,1051,1052,1055,1057,1060,1062,1063,1072,1074,1075,1079,1082,1084,1085,1086,1087,1088,1090,1094,1102,1105,1107,1129,1130,1131,1132,1133,1177,1178,1179,1181,1185,1186,1189,1190,1192,1193,1196,1198,1199,1200,1201,1202,1203,1204,1206,1207,1211,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225,1226,1227,1228,1229,1230,1231,1232,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285],"final":[40,41,43,979,1014,1034,1035,1133,1262,1273,1288],"float":[40,41,42,43,831,832,833,834,835,836,839,840,849,851,852,864,883,889,905,914,915,938,944,947,951,954,955,963,970,979,982,994,995,997,1014,1015,1019,1020,1035,1053,1054,1055,1062,1063,1079,1081,1082,1084,1086,1087,1088,1095,1097,1101,1113,1121,1129,1130,1131,1132,1133,1189,1192,1193,1206,1208,1214,1222,1225,1226,1227,1228,1229,1230,1231,1232,1262,1270,1273,1276,1277,1278,1279,1280,1281,1282,1283],"function":[15,40,41,43,389,390,393,394,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,831,833,834,836,837,840,841,842,843,844,845,846,847,848,849,851,852,854,858,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,907,908,909,910,911,912,914,915,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1245,1248,1249,1250,1278,1281,1282,1283,1287,1288,1291],"import":[43,1245,1288,1291],"int":[40,41,42,43,388,389,390,484,832,833,834,835,836,837,851,852,853,854,857,858,860,861,862,864,883,889,903,904,905,927,928,929,930,931,934,935,936,937,942,943,949,955,964,966,971,979,984,985,990,996,997,1001,1002,1005,1006,1007,1010,1011,1014,1015,1016,1021,1024,1033,1034,1035,1043,1044,1048,1049,1051,1052,1057,1058,1060,1061,1064,1066,1067,1072,1074,1077,1079,1081,1082,1086,1095,1099,1100,1102,1105,1129,1130,1131,1132,1133,1177,1186,1189,1190,1191,1193,1194,1196,1198,1199,1200,1201,1202,1203,1204,1206,1211,1214,1215,1216,1217,1218,1219,1220,1221,1225,1227,1229,1230,1231,1232,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1276,1277],"long":[1214,1224],"new":[40,41,43,484,832,833,834,839,843,847,955,959,979,980,990,1005,1006,1007,1010,1014,1015,1016,1017,1044,1049,1051,1052,1053,1054,1062,1063,1064,1079,1082,1084,1086,1087,1088,1095,1097,1099,1101,1113,1115,1119,1120,1126,1128,1133,1177,1187,1188,1189,1190,1231,1232,1245,1251,1252,1262,1272,1276,1277,1278,1279,1280,1281,1282,1283,1288,1291],"public":[979,998],"return":[15,16,17,18,19,40,41,42,43,484,832,833,834,835,836,837,839,840,841,842,843,844,845,846,847,848,849,851,852,853,854,857,858,860,861,862,864,883,889,903,904,905,914,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,940,941,943,944,948,949,950,951,952,954,955,959,960,961,962,963,964,965,966,967,968,969,970,971,978,979,980,981,982,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1021,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1048,1049,1050,1051,1052,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1081,1082,1083,1084,1085,1086,1087,1088,1090,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1177,1178,1179,1181,1185,1186,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1245,1251,1252,1262,1271,1272,1278,1282,1287,1288,1291],"short":[1214,1224,1245,1291],"static":[40,41,903,904],"super":1133,"true":[40,41,42,432,438,468,471,484,485,839,844,851,852,857,858,860,861,862,903,904,905,979,981,989,991,1009,1014,1023,1025,1075,1076,1079,1082,1084,1085,1086,1087,1088,1090,1102,1105,1129,1130,1131,1132,1133,1177,1178,1185,1189,1190,1196,1198,1199,1200,1201,1202,1203,1204,1206,1207,1214,1222,1227,1228,1229,1230,1233,1234,1235,1239,1262,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283],"try":[40,41,979,1073,1133],"var":[40,41,1129,1130,1131,1291],"while":[40,41,42,1133],AND:[839,841,860,861,1110,1111],But:1291,For:[43,839,840,979,982,993,1064,1079,1085,1093,1102,1107,1113,1114,1245,1251,1252,1288,1291],Its:[1113,1117],NOT:[839,848],Not:831,One:[40,41,43,979,1006,1049,1189,1191,1291],Ones:[1245,1253],PRs:43,Such:[979,998],That:1288,The:[15,16,17,18,19,40,41,42,43,839,840,841,842,844,846,849,851,852,853,854,857,858,860,861,862,864,883,889,903,904,905,914,915,921,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,944,947,948,949,950,951,954,955,959,960,961,966,967,968,969,978,979,982,986,987,990,991,994,995,996,997,999,1000,1003,1004,1008,1011,1014,1016,1017,1024,1027,1028,1029,1031,1033,1035,1037,1039,1041,1044,1045,1048,1049,1051,1052,1053,1054,1055,1058,1059,1060,1061,1062,1063,1064,1067,1075,1078,1079,1081,1082,1084,1086,1087,1088,1090,1093,1095,1097,1099,1101,1102,1105,1107,1108,1113,1114,1116,1117,1121,1122,1123,1124,1125,1127,1129,1130,1131,1132,1133,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225,1226,1227,1228,1229,1230,1231,1232,1245,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1280,1281,1282,1288,1291],There:[43,1245,1288],These:[43,1245],Used:[1177,1178,1185,1274,1275],Using:[1245,1246,1291],With:[40,41,1102,1105,1196,1198,1199,1200,1201,1202,1203,1204,1245,1287,1291],__array__:[979,986],__call__:[1262,1273,1274,1275],__del__:1133,__dict__:[1133,1288],__enter__:1133,__exit__:1133,__getitem__:1133,__getstate__:1133,__init__:[40,41,42,43,59,60,81,210,391,392,430,431,513,641,905,906,913,914,915,916,917,918,919,920,955,956,957,958,1079,1080,1133,1137,1144,1239,1240,1243,1244,1245,1248,1249,1250,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287,1291],__iter__:1133,__len__:1133,__next__:1133,__pow__:43,__repr__:1133,_assign_vari:1287,_axi:1133,_base:[1177,1178,1185],_compute_node_da_ratio:1133,_compute_node_strs_da:1133,_concat_unify_arrai:1133,_counter:1133,_cur_framework:[43,1133],_da_direct:1133,_da_directions_flip:1133,_da_step_tim:1133,_da_tim:1133,_da_tune_count:1133,_data:1133,_delta_da_dim_s:1133,_delta_sf:1133,_dict:1133,_dim_siz:1133,_first_da_tune_step:1133,_first_ns_tune_step:1133,_fn:1133,_forward:[1245,1287],_get_kalman_param:1291,_get_prior:1291,_get_some_model:1291,_handle_flat_arrays_in_out:43,_index:[1177,1178,1185],_input_queu:1133,_length:1133,_max_depth:1133,_max_node_dim_step_ratio:1133,_max_node_dim_step_s:1133,_max_split_factor_step_s:1133,_mean_unify_arrai:1133,_min_bas:[979,1063,1231,1232,1276,1277],_min_denomin:[979,1062],_min_node_dim_s:1133,_min_sf_tune_step:1133,_min_unit_node_tune_step:1133,_model:1291,_native_wrapp:43,_node_mapp:1133,_node_percent_mem:1133,_node_str:1133,_node_str_da_ratio:1133,_node_strs_da:1133,_node_strs_kei:1133,_node_strs_n:1133,_node_util:1133,_ns_step_tim:1133,_ns_time:1133,_ns_tune_count:1133,_num_nod:1133,_num_work:1133,_observed_config:1133,_output_queu:1133,_paramet:1287,_percent_mem_inc_per_sf:1133,_percent_mem_inc_per_unit_da_dim:1133,_percent_util_inc_per_unit_da_dim:1133,_ret_fn:1133,_safety_factor:1133,_save_dir:1133,_shift_da_split:1133,_shift_n:1133,_slice:1133,_step:[1278,1282],_sum_unify_arrai:1133,_timeout:1133,_tune:1133,_tune_da:1133,_tune_n:1133,_tune_step:1133,_unit_da_tune_count:1133,_unroll_step:1291,_with_node_mappig:1133,_worker:1133,_worker_class:1133,_worker_fn:1133,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,905,914,920,1133,1274,1275,1278,1282],abil:1245,abl:[40,41],about:[835,836,837],abov:[43,1189,1191],above_height:[40,41],abs:[289,432,559,688,851,852,979,1133],absolut:[40,41,979,980],abstractmethod:1133,accept:[15,43,1245],access:[40,41,43,1288],accord:[40,41,835,836,979,997,1016,1051,1052,1072,1077],accordingli:[851,852,860,861,862],accur:[59,391,430,431,905,917,918,919,920,955,1079,1239,1243,1253,1255,1256,1258,1259,1261],aco:[779,1113],acosh:[779,1113],across:[40,41,905,914,915,924,925,927,928,929,930,931,937,947,948,979,984,985,987,988,1133,1177,1181],activ:[1207,1208,1209,1210,1211,1212,1213,1245,1249,1250],actual:1288,adam:[1079,1081,1082,1086,1245,1278,1280,1287],adam_step:1079,adam_upd:1079,adapt:[1079,1087,1278,1281],add:[40,41,43,1133,1227,1228,1229,1230,1231,1232,1245,1276,1277,1288],add_fn_to_dict:1239,add_param:1239,added:[43,979,1062,1063,1284,1285],adding:[979,990],addit:[40,41,43,979,1005,1006,1007,1231,1232,1262,1272],adher:43,adjac:[979,982],adopt:[979,998],affect:[979,982],affin:[1276,1277],after:[839,849,979,1033,1079,1082,1083,1084,1086,1087,1088,1095,1096,1231,1232,1278,1279,1280,1281,1282,1283,1291],after_1:[979,997,1077],after_n:[979,997,1077],again:43,against:[40,41,1102,1105,1196,1198,1199,1200,1201,1202,1203,1204],agnost:[43,1245,1287,1288],aim:1291,algebra:1102,algorithm:[1214,1215,1216,1217,1218,1219,1220,1221,1262,1263,1264,1265,1266,1267,1268,1269,1291],align:[40,41,43,979,990],aliv:[905,939,941,945,979,1018,1042,1046],all:[15,16,17,18,19,40,41,43,106,231,417,538,666,851,852,853,854,860,903,904,905,914,939,945,979,980,981,987,988,998,1011,1018,1024,1046,1061,1102,1107,1129,1130,1131,1132,1133,1177,1178,1179,1185,1186,1189,1190,1193,1196,1198,1199,1200,1201,1202,1203,1204,1214,1224,1245,1288,1291],all_depth:[40,41],all_equ:979,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1177,all_tru:[40,41],alloc:[905,1133],allow:[979,1034,1035,1036,1274,1275],allow_dupl:[979,1036],alon:[905,944,954,1133,1245],along:[40,41,43,484,851,852,853,854,857,858,860,861,862,905,928,929,930,931,934,935,936,937,949,979,996,1001,1002,1011,1016,1033,1034,1035,1048,1060,1064,1067,1074,1102,1105,1129,1130,1131,1132,1133,1189,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204],alongsid:[1287,1288],alpha:[1206,1208],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,905,1133],also:[40,41,43,979,982,1079,1082,1129,1130,1131,1132,1177,1178,1179,1185,1186,1214,1223,1262,1272,1287],altern:1287,alwai:[40,41,43,1079,1085,1090],among:[40,41],amount:[905,951,1133,1245],angl:[1113,1114,1118],ani:[15,16,17,18,19,40,41,43,106,231,417,538,666,860,903,904,905,907,910,914,915,917,926,927,930,931,936,979,981,982,986,1004,1005,1006,1007,1008,1009,1023,1031,1036,1062,1063,1079,1083,1133,1177,1178,1181,1185,1186,1187,1188,1189,1193,1245,1251,1252,1274,1275,1287,1288,1291],anoth:[40,41,43,955,961,1245],another_backend:43,anyth:[43,1291],anywai:43,apart:43,api:[1245,1246],appear:[979,1010],append:[40,41,1133],appli:[15,18,19,40,41,839,848,979,1005,1006,1007,1079,1086,1087,1102,1108,1110,1111,1112,1129,1130,1131,1177,1181,1184,1186,1206,1207,1208,1209,1210,1211,1212,1213,1214,1223,1225,1226,1231,1232,1245,1248,1249,1250,1276,1277],applic:[1177,1181,1186,1214,1225,1226,1245,1291],approxim:[43,839,840,847,864,889,1206,1207],arang:[126,289,432,484,559,688,979,1034,1035],arbitrari:[40,41,905,934,935,937,1133],arc:[1113,1118],arcco:[1113,1114],arctan:[1113,1117],area:[839,840,1245],arg:[15,16,17,40,41,43,59,63,905,914,927,931,937,949,979,1005,1006,1007,1052,1133,1233,1234,1235,1239,1251,1252,1274,1275],arg_nam:979,arg_stateful_idx:[1233,1234,1235,1239,1274,1275],argmax:[126,432,559,688,979],argmin:[126,432,559,688,979],args_clon:1133,args_dist:1133,args_to_ivi:[15,1245],args_to_n:[15,1245],args_uni:1133,argsort:[103,228,414,535,663,857],argument:[15,16,17,18,19,40,41,42,43,59,63,903,904,905,914,915,927,931,937,979,982,983,991,1004,1036,1052,1113,1114,1133,1177,1181,1251,1252,1274,1275],aris:[1245,1291],arithmet:[43,1196,1199,1202,1204],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:484,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,126,289,432,484,559,688,832,833,834,835,836,837,839,840,841,842,843,844,845,846,847,848,849,851,852,853,854,857,858,860,861,862,883,889,905,923,924,925,928,929,930,931,934,935,936,937,939,941,945,949,950,955,959,965,970,971,979,980,981,982,984,985,987,988,989,990,992,993,994,995,996,997,999,1000,1001,1002,1005,1006,1007,1008,1010,1011,1012,1013,1014,1015,1016,1017,1018,1021,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1037,1038,1039,1040,1042,1043,1044,1045,1046,1048,1049,1050,1051,1052,1057,1059,1060,1061,1064,1065,1066,1067,1069,1070,1071,1072,1074,1075,1076,1077,1078,1079,1081,1082,1085,1086,1090,1092,1093,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1133,1177,1179,1186,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1245,1246,1262,1270,1271,1273,1278,1282,1287,1288],arrang:[979,1005],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,388,389,390,391,393,394,831,832,833,834,835,836,837,839,840,841,842,843,844,845,846,847,848,849,851,852,853,854,857,858,860,861,862],array_api_methods_to_test:43,array_builtin:[43,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902],array_equ:[289,688,979],array_lik:[484,979,986],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,979],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1245],arraywithgener:[22,1245],arraywithgradi:[24,1245],arraywithimag:[26,1245],arraywithlinalg:[28,1245],arraywithlog:[30,1245],arraywithmath:[32,1245],arraywithmeta:[34,1245],arraywithrandom:[36,1245],arraywithreduct:[38,1245],arriv:[40,41,42],articl:1245,arxiv:1245,as_arrai:[40,41,979,1021,1057],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[430,432,441,905,923,955,962,963,964,965],as_tensor:432,as_vari:[40,41],as_zero:[40,41],asarrai:[432,979],asin:[779,1113],asinh:[85,396,517,645,839],aspect:[1095,1100],assert:[40,41,979,989,1133],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:979,associ:[43,1102,1109],assum:[1288,1291],astyp:[432,955],asynchron:[40,41,42],at_dev:[40,42,905,918,919],at_kei:[40,41],at_key_chain:[40,41],at_nod:1133,atan2:[779,1113],atan:[779,1113],atanh:[779,1113],attent:[43,1214,1225,1226,1262,1273],attribut:[0,6,40,41,835,836,837,979,1045,1078],audienc:[1245,1288],author:1245,avail:[40,41,43,905,940,942,943,952,979,1006,1133],averag:[1079,1081,1082,1086,1129,1130,1131,1196,1199],average_across_step:[1129,1130,1131],avoid:[905,1133,1288],axes:[40,41,43,432,465,477,478,851,852,853,854,860,861,862,905,949,979,984,985,997,1010,1011,1066,1072,1077,1102,1105,1133,1196,1198,1199,1200,1201,1202,1203,1204],axes_length:[40,41,979,1005,1006,1007],axi:[40,41,432,434,435,439,440,446,455,456,457,463,464,466,851,852,853,854,857,858,860,861,862,905,907,910,917,928,929,930,931,934,935,936,937,949,979,984,985,996,997,1000,1001,1002,1010,1011,1016,1033,1034,1035,1048,1060,1061,1064,1066,1067,1074,1077,1133,1189,1195,1196,1198,1199,1200,1201,1202,1203,1204,1206,1211,1227,1229,1230],axis0:[40,41,979,1066],axis1:[40,41,979,1066],back:[43,1274,1275,1278,1282],backend:[15,17,19,40,41,388,389,390,391,393,394,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,482,483,484,485,905,940,943,952,955,961,969,978,979,1026,1030,1079,1082,1084,1086,1087,1088,1093,1133,1245,1246,1251,1252,1278,1279,1280,1281,1282,1283,1287,1288,1291],backend_nam:43,background:[1245,1288],backprop:1291,backward:[860,861,862,1287],band:[979,1014],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,391,430,431,432,457,839,847,864,889,905,907,908,909,910,911,912,914,915,917,918,919,920,955,979,1019,1035,1053,1063,1079,1133,1196,1197,1239,1243,1245,1248,1249,1250,1253,1255,1256,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1291],batch:[40,41,851,852,905,947,948,979,1011,1014,1024,1095,1099,1102,1108,1129,1130,1131,1132,1133,1214,1223,1231,1232,1276,1277],batch_shap:[432,448,979,1011,1024,1043,1095,1096,1097,1098,1099,1100,1101,1102,1109,1189,1190,1214,1224,1225,1226,1262,1271],batch_siz:[484,485,1133,1189,1190,1214,1215,1216,1217,1218,1219,1220,1221],bayesian:1291,becaus:[43,979,982],becom:[979,993,1113,1118,1291],been:[979,1005,1006,1007,1189,1190],befor:[40,41,43,905,949,1129,1130,1131,1133,1177,1186,1196,1198,1199,1200,1201,1202,1203,1204,1214,1225,1226,1291],before_1:[979,997,1077],before_n:[979,997,1077],begin:[1177,1178,1185,1288],behaviour:[43,1291],behind:[1079,1082,1084,1086,1087,1088,1245],being:[40,41,43,979,982,1047,1055,1133],belong:[40,41],below:[43,1245,1288,1291],below_depth:[40,41],benefit:1245,bernoul:[1214,1222,1262,1270],best:[43,979,1036,1245],beta1:[1079,1081,1082,1086,1278,1279,1280],beta2:[1079,1081,1082,1086,1278,1279,1280],beta:[1231,1232],between:[40,41,42,835,836,979,982,1102,1107,1177,1181,1189,1191,1227,1229,1230,1278,1280],bia:[1214,1223,1224,1262,1263,1264,1265,1266,1267,1268,1269,1272],bias_initi:[1262,1263,1264,1265,1266,1267,1268,1269,1272],bilinear:[1095,1096],bilinear_resampl:[164,346,473,604,764,1095],bilinearli:[1095,1096],binari:[839,841,1227,1228],binary_cross_entropi:1227,bit:[391,835,836,837,955,966,1095,1097,1101,1245],bitwis:[839,841],bitwise_and:[85,214,396,517,645,839],bitwise_oper:[0,7,8],block:[1245,1288],bool:[15,18,19,40,41,42,43,839,844,846,851,852,857,858,860,861,862,864,883,903,904,905,923,936,940,944,949,952,954,955,965,979,981,987,988,1001,1004,1008,1009,1014,1021,1023,1031,1036,1057,1060,1074,1075,1076,1079,1082,1083,1084,1085,1086,1087,1088,1090,1102,1105,1129,1130,1131,1132,1133,1177,1178,1179,1181,1185,1186,1189,1190,1196,1198,1199,1200,1201,1202,1203,1204,1206,1207,1214,1222,1251,1252,1262,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283],both:[43,979,1000],bottom:1245,boundari:[40,41,1189,1193],branch:[43,903,904],brittl:43,broadcast:[40,41,43,839,841,851,852,860,861,862,864,883,889,979,990,1008,1038,1039,1040,1048,1102,1105,1113,1118,1121,1196,1198,1199,1200,1201,1202,1203,1204],broadcast_to:[289,688,979],build:[1133,1245,1262,1273,1274,1275],build_mod:[1262,1273,1274,1275],builder:1245,built:[905,979,982,1133,1262,1273,1274,1275],builtin:43,builtin_ab:[244,864],builtin_add:[244,864],builtin_and:[244,864],builtin_bool:[244,864],builtin_contain:[244,864],builtin_deepcopi:[244,864],builtin_dir:[244,864],builtin_eq:[244,864],builtin_float:[244,864],builtin_floordiv:[244,864],builtin_g:[244,864],builtin_getattr:[244,864],builtin_getattribut:[244,864],builtin_getitem:[244,864],builtin_gt:[244,864],builtin_int:[244,864],builtin_invert:[244,864],builtin_l:[244,864],builtin_lt:[244,547,675,864],builtin_mul:[244,864],builtin_n:[244,864],builtin_neg:[244,864],builtin_or:[244,864],builtin_po:[244,864],builtin_pow:[43,244,864],builtin_radd:[244,864],builtin_rand:[244,864],builtin_rfloordiv:[244,864],builtin_rmul:[244,864],builtin_ror:[244,864],builtin_rpow:[244,864],builtin_rsub:[244,864],builtin_rtruediv:[244,864],builtin_rxor:[244,864],builtin_setitem:[244,864],builtin_some_op:43,builtin_sub:[244,864],builtin_truediv:[244,864],builtin_xor:[244,864],bypass:1288,cach:[905,921,979,991],cache_fn:979,calcul:[40,41,42,43,839,840,847,849,864,889,1113,1121],call:[43,905,949,979,1047,1055,1073,1079,1083,1133,1177,1178,1181,1185,1262,1273,1274,1275,1278,1282,1288,1291],callabl:[40,41,903,904,905,914,915,949,979,991,1004,1006,1036,1073,1129,1130,1131,1132,1133,1177,1181,1182,1183,1185,1186,1214,1225],can:[43,905,947,948,949,979,1049,1095,1097,1133,1245,1287,1288,1291],cancel_join_thread:1133,captur:1245,cast:[40,41,126,289,432,559,688,955,979,996,1095,1097,1101],catch_except:[979,1004],categori:43,caus:43,ceil:[289,432,688,979,982],cell:[1214,1224,1262,1271],certain:[40,41,979,982,1034,1035],chain:[40,41,1129,1130,1131,1284,1285],chang:[43,905,979,1049,1133,1177,1179,1186,1245,1287],channel:[979,1014,1095,1097,1098,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272],check:[15,16,17,18,19,40,41,43,905,944,954,955,960,969,978,979,989,1009,1023,1031,1065,1075,1079,1085,1133,1177,1178,1185,1245,1288],check_nest:[1177,1185],check_shap:[40,41],check_submod_ret:[1274,1275],check_typ:[40,41],choic:[1245,1288],choleski:[768,1102],choos:[979,1076,1102,1107,1113,1118,1245],choose_random_framework:59,chosen:[40,41,979,982,1076],chunk:[905,947,948,949,1133],chunk_siz:[905,949,1133],circl:[1113,1114,1116],clark:1245,clear:[905,921,1133],clear_framework_stack:59,clear_mem_on_dev:[430,680,905],click:1245,clip:[40,41,289,432,688,979,994,995,1038,1040,1245],clip_matrix_norm:979,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,979],clipped_delta:1133,clone:[40,41,905,924,925,926,927,1133],clone_arrai:1133,clone_it:1133,clone_nest:1133,clonedit:1133,cloneditem:1133,clonednest:1133,close:[43,1095,1100,1113,1116,1133,1291],closest:[955,960],closest_valid_dtyp:955,code:[40,41,42,43,484,1245,1246,1287,1288],codebas:[905,947,948,1133,1245,1288,1291],codomain:[839,840,849],collect:[15,40,41,430,432,468,473,477,481,482,484,864,903,905,955,979,1079,1095,1102,1110,1113,1133,1177,1189,1196,1206,1214,1227,1231,1248,1262,1276,1278],color:[40,41,42,1289,1290],column:[979,1024],combin:[40,41,42,1095,1100,1245,1291],combined_batch_s:1133,come:1288,command:1245,comment:43,commit:1291,common:[40,41,43,1113,1118],common_key_chain:[40,41],commun:[43,1245,1288],compar:[40,41,979,981,987,988],comparison_oper:[0,9,10],compat:[43,839,841,851,852,860,861,862,864,883,889,979,1008,1049,1113,1121,1245,1291],compil:[289,432,688,1234,1235,1239,1245,1274,1275,1278,1279,1280,1281,1282,1283],compile_graph:[1233,1245,1274,1275,1278,1282],compile_on_next_step:[1274,1275,1278,1279,1280,1281,1282,1283],complet:[40,41,1102,1107,1133],complex:[1288,1291],compon:[979,1000],composit:43,comput:[40,41,839,841,842,846,848,851,852,864,883,905,949,979,994,995,1001,1002,1008,1037,1079,1081,1082,1083,1084,1086,1087,1088,1090,1092,1095,1098,1102,1103,1104,1105,1106,1107,1110,1111,1112,1113,1114,1116,1117,1118,1122,1123,1124,1125,1127,1177,1181,1196,1197,1198,1199,1200,1201,1202,1203,1204,1214,1215,1216,1217,1218,1219,1220,1221,1223,1225,1227,1228,1229,1230],concat:[40,41,905,934,935,936,937,949,979,1014,1133],concaten:[40,41,126,289,432,559,688,979,1014,1133,1245],concatten:[40,41,905,934,935,936,937,949,1133],condit:[432,903,904,979,1076,1177,1185],conditon:[1177,1185],config:[40,41,1133],config_list:1133,configur:[40,41],conflict:43,conform:43,conjunct:1288,connect:[1239,1262,1272,1273],consid:[40,41,1102,1107,1287,1291],consist:[40,41,905,937,1133,1196,1197,1274,1275,1288],constant:[905,914,915,979,997,1133,1177,1181,1227,1228,1229,1230,1231,1232,1253,1254,1258,1261,1274,1275,1276,1277,1288],constant_kwarg:1133,constant_pad:[289,432,559,688,979],constitu:[40,41],construct:[979,1067,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287],constructor:[40,41,42,979,983,1284,1285],consum:[905,1133],cont_feat_dim:[1214,1225],contaienr:[40,41],contain:[15,18,19,42,43,832,833,834,839,840,841,844,846,847,849,851,852,857,858,860,861,862,864,883,889,905,924,928,949,955,959,979,980,984,985,993,994,995,998,1008,1023,1038,1040,1050,1059,1062,1063,1079,1081,1082,1084,1086,1087,1088,1113,1121,1129,1130,1131,1132,1133,1189,1190,1196,1198,1199,1200,1202,1204,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[432,688,979],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[432,979,1041,1214,1225,1262,1273],context_dim:[1262,1273],contextmanag:[59,60],continu:[43,1133,1288],contract:[40,41,1196,1197],contribut:[1245,1246],contributor:[43,1245],control:1245,conv1d:[195,377,498,821,1214,1245,1262],conv1d_transpos:[195,377,498,821,1214],conv1dtranspos:[1245,1262],conv2d:[195,377,498,630,821,1214,1245,1262],conv2d_transpos:[195,377,498,821,1214],conv2dtranspos:[1245,1262],conv3d:[195,377,498,630,821,1214,1245,1262],conv3d_transpos:[195,377,498,821,1214],conv3dtranspos:[1245,1262],convent:[40,41,1196,1197],conver:[905,921,932,944,951,954,1133],convers:[16,17,18,19,40,41,1133,1245],convert:[15,16,17,18,19,40,41,43,905,932,933,955,961,967,968,979,1058,1070,1071,1095,1097,1101,1102,1109,1133,1177,1179,1186,1245,1252],convert_dtyp:955,convolut:[1214,1215,1216,1217,1218,1219,1220,1221,1262,1263,1264,1265,1266,1267,1268,1269],cool:43,cooler:43,coordin:[979,1039,1113,1114,1116,1118],copi:[40,41,484,979,999,1133,1177,1179],copy_arrai:[432,688,979],copy_nest:1177,core:[430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,482,483,484,485,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,907,908,909,910,911,912,914,915,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1245],corner:43,correct:[43,1245,1288],correctli:[40,41,1102,1105,1113,1118,1196,1198,1199,1200,1201,1202,1203,1204],correspond:[40,41,43,864,889,979,996,1189,1190],cos:[85,396,517,645,839,979,1014,1113,1114,1127,1288],cosh:[85,396,517,645,779,839,1113],cosin:[839,842,843,1113,1114,1115,1120],cost:[1079,1081,1082,1084,1086,1087,1088,1129,1130,1131,1132],cost_fn:[1129,1132],could:1291,count:[40,41,853,854,860,861,862,1133,1196,1201,1203,1243],cprint:1289,cpu:[40,41,43,905,942,944,950,951,954,979,982,986,1016,1017,1024,1034,1035,1043,1044,1045,1051,1052,1078,1133,1189,1190,1191,1192,1193,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1284,1285,1287,1288],creat:[40,41,832,833,834,905,914,915,979,982,986,1015,1016,1017,1024,1034,1035,1043,1044,1045,1051,1052,1069,1078,1079,1092,1133,1189,1190,1191,1192,1193,1245,1246,1251,1252,1253,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287,1291],create_if_abs:[40,41],create_vari:1253,creation:[40,41,42,43],creation_funct:[388,389,390,832,833,834],crop:[1095,1099],crop_siz:[1095,1099],cross:[289,688,979,1227,1228,1229,1230],cross_entropi:1227,cuda:[40,41,905,914,933,950,979,982,986,1016,1017,1024,1034,1035,1043,1044,1045,1051,1052,1078,1133,1189,1190,1191,1192,1193,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1284,1285],cumprod:[126,289,432,688,979],cumsum:[688,979],cumul:[979,1001,1002],current:[40,41,42,43,905,914,938,939,941,945,955,961,969,978,979,1003,1018,1026,1030,1042,1046,1133,1177,1178,1185,1245,1291],current_framework:59,current_framework_str:[432,688,979,1133],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1239,d_in:[1214,1215,1216,1217,1218,1219,1220],d_out:[1214,1215,1216,1217,1218,1219,1220],da_can_termin:1133,da_dim_s:[905,1133],da_direct:1133,da_tune_step:[905,1133],dai:1291,daniel:1245,data:[40,41,42,43,832,833,834,836,837,839,840,841,844,846,849,851,852,853,854,860,861,862,864,883,889,905,907,908,909,910,911,912,917,918,919,933,955,959,960,961,965,966,967,968,969,970,971,978,979,982,986,1008,1015,1024,1031,1044,1045,1049,1059,1061,1065,1078,1079,1085,1093,1113,1121,1133,1214,1223,1245],data_format:[1214,1215,1216,1217,1218,1219,1220,1221,1262,1263,1264,1265,1266,1267,1268,1269],data_type_funct:[391,393,394,835,836,837],dataset:[40,41],datatyp:[40,41,955,960,970,971],dcdw:[1079,1081,1082,1084,1086,1087],debug_info:1239,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1079,1086,1087,1278,1280,1281],decay_lambda:[1079,1086,1087,1278,1280,1281],decid:[40,41,1291],decompos:[1102,1103,1107],decomposit:[1102,1103,1107,1108],decor:43,decrement:[979,1027],dedic:[1079,1093,1251,1252],deep:[40,41,1245],deep_copi:[40,41],deeper:[905,927,931,937,1133,1177,1186,1245],deepli:[1177,1179],def:[43,60,81,210,392,513,641,906,913,916,956,957,958,1080,1133,1137,1144,1240,1244,1245,1254,1257,1260,1287,1288,1291],default_dev:43,default_devic:905,default_dtyp:[43,955],default_float_dtyp:955,default_int_dtyp:955,default_key_color:[40,41,42],default_nod:1133,default_rng:484,default_v:[979,1004],defaultdevic:[905,906],defaultdtyp:[955,956],defaultfloatdtyp:[955,957],defaultintdtyp:[955,958],defer:43,defin:[43,979,1000,1043,1045,1078,1189,1191],degre:[839,842,1113,1125,1127],del:1133,delta:[1079,1081,1133,1239],delta_dim_s:1133,delta_percent_mem:1133,delta_sf:1133,delta_util:1133,demo:1245,denomin:[979,1013,1020,1054,1062,1063,1231,1232,1276,1277],dens:[1262,1272],depend:[43,839,840,847,864,889,979,1076,1102,1108,1245],depth:[40,41,432,458,905,927,931,937,979,1022,1043,1133,1177,1186,1239,1243,1274,1275],depth_cutoff:[40,41],depthwis:[1214,1221,1262,1269],depthwise_conv2d:[195,377,498,630,821,1214],depthwiseconv2d:[1245,1262],deriv:[1079,1081,1082,1084,1086,1087,1088,1177,1179,1186,1245,1274,1278,1282,1284],descend:[857,858,1102,1108],descent:[1079,1084,1278,1283],describ:[40,41,1196,1197],descript:[851,852],design:[1245,1246],desir:[40,41,905,950,955,959,979,982,986,1024,1025,1044,1045,1078,1095,1100,1133,1196,1198,1199,1200,1202,1204],desired_aspect_ratio:[473,476,1095,1100],desired_percent_increas:1133,detail:1291,detect:[40,41,1177,1178,1185],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,839,840,841,844,849,851,852,860,861,862,864,889,905,940,942,943,952,955,959,960,966,969,970,971,978,979,981,982,986,987,988,1023,1026,1030,1031,1065,1075,1079,1085,1113,1121,1129,1130,1131,1132,1133,1214,1225],dev:[40,41,42,43,119,283,430,432,433,436,446,447,448,456,457,458,459,460,461,467,484,485,552,680,905,908,909,911,912,914,915,918,919,921,922,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,941,944,945,946,947,948,949,950,951,954,979,982,986,1016,1017,1024,1034,1035,1043,1044,1045,1051,1052,1078,1079,1094,1189,1190,1191,1192,1193,1251,1252,1253,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1284,1285],dev_clon:[40,41,905],dev_clone_arrai:905,dev_clone_it:905,dev_clone_nest:905,dev_dist:[40,41,905],dev_dist_arrai:905,dev_dist_it:905,dev_dist_nest:905,dev_from_str:[43,119,283,430,552,680,905],dev_mapp:905,dev_str:[40,41],dev_to_str:[119,283,430,552,680,905],dev_unifi:905,dev_unify_arrai:905,dev_unify_it:905,dev_unify_nest:905,dev_util:905,devclonedit:905,devcloneditem:905,devclonednest:905,devdistit:905,devdistitem:905,devdistnest:905,develop:[43,1245,1288,1291],deviat:[40,41,1189,1192,1196,1202,1231,1232,1276,1277],devic:[21,40,41,43,388,389,390,431,432,445,832,833,834,907,908,909,910,911,912,914,915,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,979,982,986,1015,1016,1017,1024,1034,1035,1043,1044,1045,1051,1052,1078,1079,1094,1189,1190,1191,1192,1193,1245,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1284,1285],devmanag:[905,913],devmapp:[905,915],devmappermultiproc:905,diag:[1102,1108],diagon:[979,1024],dict:[15,16,17,18,19,40,41,42,905,907,910,914,915,917,927,928,929,930,931,979,1005,1006,1007,1036,1129,1130,1131,1133,1177,1179,1180,1181,1184,1186,1251,1252],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,835,836,905,924,925,928,929,1102,1107,1133,1214,1223,1245,1288,1291],differenti:[1245,1288],dilat:[1214,1215,1216,1217,1218,1219,1220,1221,1262,1263,1264,1265,1266,1267,1268,1269],dim:[40,41,43,979,1043,1095,1096,1100,1102,1108,1133,1262,1273],dim_siz:[40,41,905,1133],dimens:[40,41,42,851,852,853,854,860,861,862,905,936,979,990,996,1000,1005,1006,1007,1010,1014,1021,1033,1043,1048,1049,1060,1061,1064,1072,1074,1095,1099,1102,1105,1108,1129,1130,1131,1132,1133,1189,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1211,1214,1215,1216,1217,1218,1219,1220,1221,1224,1227,1229,1230,1262,1263,1264,1265,1266,1267,1268,1269,1272,1273],dimension:[40,41,484,851,852,860,861,862,979,1060,1061,1102,1108],direct:1133,directli:[43,1177,1186,1288,1291],directori:[979,1056,1068],discret:[1227,1229],disk:[40,41,1095,1097],distanc:[979,982],distribut:[40,41,905,924,928,929,930,931,1133,1189,1190,1191,1192,1193,1214,1222,1262,1270,1274,1275],distribute_nest:1133,distributedarrai:[40,41],distrubt:[1227,1229],dive:[1245,1288],divid:[40,41,979,1060,1062,1113],dividend:[1113,1121],divis:[979,1013,1020,1054,1062,1063,1079,1081,1082,1086,1113,1121,1278,1279,1280],divisor:[1079,1081,1082,1086,1113,1121,1278,1279,1280],doc:1245,docstr:43,doe:[40,41,43,979,982,1060,1287],doesn:[1102,1107,1245],doing:43,domain:[839,840,849,1113,1114],don:1245,done:43,door:1291,dot:[1102,1104,1214,1225,1226,1262,1273],down:1287,downscal:[979,994,995],drag:[1245,1291],draw:[1189,1190,1192,1193],drawn:[1189,1190,1191,1192,1193],drop:[1245,1291],dropout:[1214,1245,1262,1273],dropout_r:[1262,1273],ds_tune_step:905,dtype:[40,41,43,126,289,388,389,390,391,393,394,432,433,436,437,445,448,459,467,559,688,832,833,834,835,836,837,959,960,961,962,963,964,966,967,968,969,970,971,972,973,974,975,976,977,978,979,982,986,1015,1024,1043,1044,1045,1078],dtype_bit:[126,289,432,559,688,955],dtype_from_str:[43,126,289,432,559,688,955],dtype_in:[432,442,443,444,955,961,966,967,968,969,970,971,978],dtype_to_str:[126,289,432,559,688,955],duplic:[40,41],dure:[40,41,43,903,904,979,1073,1079,1081,1082,1086,1129,1130,1131,1132,1274,1275,1278,1279,1280,1282],dynam:[432,438,903,904],each:[40,41,42,43,839,840,841,844,846,847,849,857,858,864,883,889,905,914,915,924,925,926,927,928,929,930,936,948,949,979,980,981,997,1008,1048,1059,1060,1064,1067,1077,1079,1082,1084,1086,1087,1088,1095,1098,1102,1108,1113,1116,1121,1123,1124,1133,1177,1181,1189,1190,1196,1197,1214,1215,1216,1217,1218,1219,1220,1221,1222,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1273,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1288],eager:1288,easi:1291,easili:1245,econom:1291,ecosystem:1245,edg:[979,993,997,1077],effect:[1079,1088],effective_grad:[1079,1088],effici:1291,einop:[40,41,979,1005,1006,1007],einops_rearrang:[40,41,979],einops_reduc:[40,41,979],einops_repeat:[40,41,979],einstein:[40,41,1196,1197],einsum:[40,41,181,365,486,620,801,1196],either:[40,41,43,979,1004,1036,1039,1041,1129,1130,1131,1132,1133,1262,1273,1274,1275,1288],eleg:1133,element:[40,41,43,484,839,840,841,842,843,844,846,847,848,849,853,854,857,858,860,861,862,864,883,889,905,926,930,936,955,959,979,980,982,984,985,987,988,992,993,994,995,1001,1002,1008,1011,1012,1013,1024,1025,1038,1040,1048,1050,1059,1060,1071,1076,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1133,1196,1197,1199,1201,1203,1206,1207,1208,1209,1210,1211,1212,1213,1214,1222,1262,1270],elementwis:[40,41],elementwise_affin:[1276,1277],elementwise_funct:[839,840,841,842,843,844,845,846,847,848,849],elemtn:[1189,1190],elif:1133,els:[979,989,1004,1009,1133],elsewher:[979,1076],emphas:1245,empti:[40,41,1102,1107,1133],enabl:[40,41,42,43,1245],encapsul:[835,837],encod:[979,1014,1095,1097],end:[979,982,1245,1288],ensur:43,entir:[40,41,860,861,862,905,949,1133,1245,1262,1271],entri:[40,41,979,1011,1034,1035,1060,1061],entropi:[1227,1228,1229,1230],enumer:1133,environ:1245,eps:[391,835,836],epsilon:[1079,1081,1082,1086,1227,1228,1229,1230,1231,1232,1276,1277,1278,1279,1280],equal:[40,41,432,559,688,839,842,844,979,981,987,988,997,1060,1077,1113,1125,1127,1189,1193],equality_matrix:[979,981],equat:[40,41,1196,1197],equival:[851,852,979,982,1113,1127],erf:[482,779,1113],error:[40,41,43,905,979,1061,1113,1122,1133,1206,1207,1274,1275,1278,1282],essenti:43,etc:[40,41,43,905,950,979,982,986,1016,1017,1024,1034,1035,1043,1044,1045,1051,1052,1078,1133,1189,1190,1191,1192,1193,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1284,1285,1291],euclidean:[851,852],euler:831,evalu:[40,41,839,847,860,861,862,979,1039,1059,1177,1178,1185],even:[43,1291],evenli:[40,41,979,982,1034,1035,1060],everi:[979,981,1291],exact:[40,41],exampl:[43,903,904,979,993,1064,1102,1107,1245,1287,1288,1291],example_input:[432,438,903,904],exc_tb:1133,exc_typ:1133,exc_val:1133,exce:[979,1040],except:[40,41,44,47,860,861,862,979,982,989,996,1004,1073,1133],excess_s:1133,excit:[1245,1288],exclud:[59,61,979,982,1189,1193],exclus:[40,41,432,440,453,468,470,979,1001,1031,1079,1085,1189,1191],execut:[43,979,1073,1288],execute_with_gradi:[161,341,468,599,758,1079,1245,1287],exist:[40,41,979,1004,1133,1245,1278,1282,1291],exp:[779,1113],expand:[40,41,979,1010,1014],expand_dim:[40,41,289,688,979,1133],expect:[979,983],explain:[43,1288],explicitli:[43,1262,1271,1273,1274,1275,1288],expon:[43,864,889,979,1063],exponenti:[43,864,889,1113,1122,1123],expos:[979,986,998],express:[979,1039],exsit:[40,41],extend:43,extra:[40,41,42,1079,1083],eye:[1102,1104],fabian:1245,fabio:1245,factor:[905,914,947,948,949,1079,1081,1082,1086,1087,1102,1108,1133,1214,1215,1216,1217,1218,1219,1220,1221,1262,1263,1264,1265,1266,1267,1268,1269,1278,1279,1280,1281],fail:43,falck:1245,fall:[1274,1275,1278,1282],fallback_to_non_compil:[1274,1275,1278,1282],fals:[15,18,19,40,41,42,59,66,67,68,69,70,430,432,440,441,453,463,466,468,469,470,477,478,839,844,851,852,857,858,860,861,862,905,923,936,944,949,954,955,962,963,964,965,979,981,1001,1004,1009,1014,1021,1031,1036,1057,1060,1074,1076,1079,1082,1083,1084,1085,1086,1087,1088,1102,1105,1129,1130,1131,1132,1133,1177,1178,1179,1181,1185,1186,1196,1198,1199,1200,1201,1202,1203,1204,1233,1234,1235,1239,1243,1251,1252,1274,1275,1278,1279,1280,1281,1282,1283],fan_in:1253,fan_mod:1253,fan_out:1253,far:[1177,1178,1185,1287],faster:[903,904],favourit:[1245,1287],feasibl:1291,feat_dim:[1214,1225,1226],fed:[905,949,1133],feed:[905,949,1133],few:43,field:1291,file:[40,41,43,979,1056,1068,1274,1275],filepath:[40,41],fill:[40,41,832,833,834,979,1015,1044,1189,1191],fill_valu:[432,445,979,1015],filter:[1214,1215,1216,1217,1218,1219,1220,1221,1262,1263,1264,1265,1266,1267,1268,1269,1291],filter_s:[1262,1263,1264],filter_shap:[1262,1265,1266,1267,1268,1269],find:[40,41,1291],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[80,81,209,210,391,392,512,513,640,641,835],finish:[1245,1291],finit:[839,844],first:[40,41,43,484,839,841,903,904,905,936,979,987,996,1000,1008,1034,1035,1064,1066,1079,1083,1102,1108,1129,1130,1131,1132,1133,1177,1178,1185,1189,1195,1196,1201,1203,1262,1273,1274,1275,1278,1282,1288,1291],firstlayersiren:[1245,1253],firstli:[1288,1291],fist:[905,949,1133],fit:[40,41,430,432,468,473,477,481,482,484,979,1048,1095,1100],fix:43,fkt:1291,flag:[40,41,43,1079,1085],flat:[40,41,43,979,1048,1051],flat_list:[40,41],flatten:[40,41,851,852,979,1014,1048,1196,1198,1199,1200,1202,1204],flatten_key_chain:[40,41,1274,1275],flexibl:[1245,1288],flip:[40,41,99,224,410,531,659,853,979],float32:[43,432,448,955,959,967,968,979,982,986,1024,1044,1045,1078],float_dtyp:[955,963,973],float_img_to_uint8_img:1095,floor:[289,432,688,979,1013,1133],floormod:[289,432,688,979],fluid:1291,fname:[1233,1235,1239,1274,1275],folder:[43,1245],follow:[40,41,43,835,837,851,852,905,949,979,1027,1028,1029,1062,1063,1079,1082,1084,1086,1087,1088,1133,1177,1181,1186,1214,1225,1226,1245,1262,1272,1278,1282],followng:[835,836],fomaml_step:1129,forget:[1079,1081,1082,1086,1278,1279,1280],fork:[979,1041,1245,1246],forkserv:[979,1041,1133],form:[15,16,17,18,19,40,41,979,986,1079,1082,1084,1086,1087,1088,1177,1179,1186,1214],format:[40,41,43,905,923,955,959,961,965,979,982,986,1024,1044,1045,1078,1133,1196,1197,1245,1287,1288],format_fn:[40,41],format_key_chain:[40,41],forward:[1274,1275,1278,1282,1287],found:[40,41,42],fourier:[979,1014],fourier_encod:979,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,95,98,100,104,107,108,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,165,166,167,169,170,171,175,176,177,178,179,180,182,183,184,185,186,187,188,191,193,194,196,197,198,199,200,201,202,207,208,210,211,212,215,216,217,218,219,220,223,225,229,232,233,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,342,343,344,345,347,348,349,351,352,353,354,355,357,358,361,362,363,364,366,367,368,369,370,371,372,373,376,378,379,380,381,382,383,384,389,390,392,393,394,397,398,399,400,401,402,403,404,405,406,409,411,415,418,419,431,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,469,470,471,472,474,475,476,478,479,480,483,485,487,488,489,490,491,492,493,496,497,499,500,501,502,503,504,505,510,511,513,514,515,518,519,520,521,522,523,524,525,526,527,530,532,536,539,540,548,553,554,555,556,557,558,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,600,601,602,603,605,606,607,609,610,611,612,616,617,618,619,621,622,623,624,625,626,627,631,632,633,638,639,641,642,643,646,647,648,649,650,651,652,653,654,655,658,660,664,667,668,676,681,682,683,684,685,686,687,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,759,760,761,762,763,765,766,767,769,770,771,772,773,774,775,777,778,780,781,782,783,784,785,786,787,788,789,790,791,792,793,795,796,797,798,799,800,802,803,804,805,806,807,808,811,812,813,814,815,816,817,819,820,822,823,824,825,826,827,828,833,834,836,837,839,840,841,842,843,844,845,846,847,848,849,852,854,858,861,862,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1111,1112,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1197,1198,1199,1200,1201,1202,1203,1204,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1229,1230,1232,1234,1235,1237,1238,1240,1244,1245,1249,1250,1251,1252,1254,1255,1256,1257,1258,1259,1260,1261,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1275,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1288,1290,1291],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1133,framewrk:[979,1041],freeli:43,frequenc:[979,1014],from:[40,41,42,43,839,846,849,853,854,860,861,862,905,914,915,949,955,961,979,1004,1011,1016,1017,1024,1049,1059,1061,1069,1076,1079,1082,1086,1095,1099,1102,1107,1129,1130,1131,1132,1133,1177,1179,1186,1189,1190,1191,1192,1193,1196,1201,1203,1214,1222,1225,1245,1251,1252,1262,1270,1273,1278,1282,1287,1288],from_cal:[1274,1275],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[126,289,432,559,688,835,836,979,1102,1107,1245],full_matric:[1102,1108],fulli:[43,1245,1262,1272,1273,1287],func:[40,41,432,438,468,469,903,904,905,949,979,991,1079,1083,1133],further:[43,1291],furthermor:1291,futur:1291,gain:1253,gamma:[1231,1232],gather:[40,41,126,289,432,559,688,979,1017],gather_nd:[40,41,126,289,432,559,688,979],gauss:[1113,1122],gaussian:[1206,1207],geglu:[1245,1248],gelu:[375,495,810,1206,1245,1248],gener:[23,40,41,43,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,484,903,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1085,1189,1191,1193,1194,1245,1278,1282],geometr:[979,1014],get:[40,41,43,835,836,837,905,914,915,923,938,939,944,948,951,954,955,965,966,979,983,1018,1019,1020,1047,1133,1243,1245,1262,1271,1291],get_all_arrays_in_memori:979,get_all_arrays_on_dev:905,get_framework:59,get_initial_st:[1262,1271],get_min_bas:979,get_min_denomin:979,get_mod_kei:[1274,1275],get_num_dim:[432,688,979],get_param:1239,get_param_recurs:1239,get_referrers_recurs:979,getfullargspec:1133,gist:1245,give:[43,857,858,979,1049,1288],given:[40,41,43,832,833,834,853,854,857,858,905,938,944,947,948,949,951,954,955,959,979,982,986,993,1001,1002,1011,1017,1034,1035,1044,1045,1048,1051,1052,1060,1067,1072,1074,1078,1079,1081,1082,1084,1086,1087,1088,1102,1104,1109,1113,1114,1133,1177,1182,1183,1189,1192,1193,1195,1196,1199,1201,1202,1203,1204,1214,1215,1216,1217,1218,1219,1220,1221,1251,1252,1291],global:[40,41,42,905,914,915,922,947,948,949,955,962,963,964,979,1003,1019,1020,1047,1053,1054,1055,1062,1063,1079,1094,1133,1231,1232,1237,1238,1245,1276,1277],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1245,1253,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272],got:[43,1245],gpu0:43,gpu2:43,gpu:[905,940,943,1133],gpu_is_avail:[430,905,1133],grad:[1245,1278,1282,1287],gradient:[25,40,41,469,470,471,472,905,949,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1098,1129,1130,1131,1132,1245,1278,1279,1280,1281,1282,1283,1287,1291],gradient_descent_upd:[1079,1129,1130,1131,1132],gradient_imag:[164,346,473,604,764,1095],gradienttrack:[1079,1080],graph:[1079,1082,1084,1086,1087,1088,1233,1234,1235,1240,1245,1274,1275],graph_compil:[1233,1234,1235,1236,1237,1238,1239,1243],greater:[40,41,979,982,1012,1061,1189,1193],green:[40,41,42,1289,1290],grid:[979,1039],group:[1095,1100],guid:[1245,1246,1291],gym:1245,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1291,half:[979,982,1133,1189,1193],hand:1245,handl:[40,41,42,43,903,904,905,921,923,932,933,944,951,954,1079,1082,1084,1086,1087,1088,1133,1278,1279,1280,1281,1282,1283],has:[40,41,43,979,1064,1102,1107,1113,1117],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,979],hasattr:1133,have:[40,41,43,835,836,839,840,841,844,846,849,851,852,853,854,860,861,862,864,883,889,979,996,1000,1005,1006,1007,1008,1015,1059,1064,1079,1085,1093,1102,1108,1113,1121,1133,1245,1287,1288],haven:43,hdf5:[40,41,1274,1275],head:[1214,1225,1262,1273],head_dim:[1262,1273],height:[1095,1100],height_cutoff:[40,41],help:[59,391,430,431,905,917,918,919,920,955,1079,1239,1243,1245,1253,1255,1256,1258,1259,1261],helper:1245,here:[43,1245],hidden:[1214,1224,1262,1271],hierarch:[979,998],hierarchi:[40,41],high:[40,41,484,1189,1191,1193],higher:[1079,1082,1084,1086,1087,1088,1102,1108],highest:[1189,1191],highest_util:1133,highest_util_nod:1133,highli:1245,highlight:1291,highlight_subgraph:[1233,1235,1239],hint:43,hkt:1291,hold:[955,959,979,982,986,1051,1052],host:1245,hot:[979,1043],how:[1245,1262,1273,1274,1275,1288,1291],howev:[43,1288],http:1291,hyperbol:[839,840,843,1113,1115,1119,1120,1126,1128,1206,1213],hypothet:1291,icon:1245,idea:1245,ident:[40,41,43,126,289,432,559,688,979],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[831,835,836,839,849],if_exist:[40,41],ignor:[40,41,1278,1282],ignore_key_error:[40,41],ignore_miss:[1278,1282],ignore_non:[40,41],iinfo:[80,209,391,512,640,835],imag:[27,474,475,476,979,1033,1096,1097,1098,1099,1100,1101,1214,1215,1216,1217,1218,1220,1221,1245,1291],image_dim:[1095,1099],imkkhk:1291,immedi:[1245,1288,1291],implement:[43,839,840,847,864,889,1245,1288,1291],in_featur:[1214,1223],inadvert:43,includ:[40,41,43,851,852,860,861,862,979,982,1023,1062,1063,1075,1177,1178,1189,1193,1262,1272,1273,1276,1277,1287],include_deriv:[1177,1179,1186],include_empti:[40,41],include_gener:[1233,1234,1235,1239,1274,1275],include_inf:[40,41,979,1023,1075],include_nest:[1177,1178],include_self:[40,41],inclus:[1189,1191],incom:[1214,1223],increas:[905,927,931,937,979,997,1010,1077,1133,1177,1186],increasingli:1291,increment:[979,1028,1133],increment_param_count:1239,inde:1245,indent:[40,41,42],independ:[1189,1190],index:[40,41,432,484,979,984,985,1016,1017,1039,1061,1064,1177,1180,1182,1183,1184,1187],index_nest:1177,indic:[40,41,432,446,447,458,460,461,851,852,857,858,979,984,985,1016,1017,1025,1043,1051,1052,1059,1177,1178,1180,1182,1183,1184,1185,1187,1188,1189,1190,1206,1211,1214,1215,1216,1217,1218,1219,1220,1221,1231,1232,1262,1263,1264,1265,1266,1267,1268,1269,1274,1275],indices_wher:[126,289,432,688,979],indistinguish:[839,849],inevit:1291,inf:[40,41,851,852,979,1023,1032,1075,1113,1117],infer:[839,846,903,904,979,1011,1021,1024,1049,1057,1059,1095,1099,1102,1107,1288,1291],infin:[839,840,844,849,851,852,979,1032],infinit:[839,849],inform:[835,836,837,1079,1090],init_c:[1214,1224],init_h:[1214,1224],init_on_first_step:[1278,1282],initi:[40,41,42,59,391,430,431,905,917,918,919,920,955,1079,1133,1214,1224,1239,1243,1245,1255,1256,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1278,1282],initialz:[1274,1275],inner:[1129,1130,1131,1132],inner_batch_fn:[1129,1130,1131],inner_batch_shap:[1214,1223],inner_cost_fn:[1129,1130,1131],inner_grad_step:[1129,1130,1131,1132],inner_learning_r:[1129,1130,1131,1132],inner_optimization_step:[1129,1130,1131,1132],inner_v:[1129,1130,1131],inp:1133,inplac:[40,41,979,989,1026,1030,1065,1079,1082,1084,1086,1087,1088,1251,1252,1278,1279,1280,1281,1282,1283],inplace_arrays_support:[432,979],inplace_decr:[126,289,432,559,688,979],inplace_incr:[126,289,432,559,688,979],inplace_oper:[0,11,12],inplace_upd:[40,41,126,289,432,559,688,979,1251,1252],inplace_variables_support:[432,979],input:[15,18,19,40,41,42,43,839,840,841,842,843,844,845,846,847,848,849,851,852,853,854,857,858,860,861,862,903,904,905,914,915,922,923,924,927,928,931,937,949,950,955,959,960,962,963,964,965,966,970,971,979,980,981,984,985,987,988,989,990,992,993,994,995,996,997,999,1001,1002,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1021,1023,1024,1025,1027,1028,1029,1031,1032,1033,1037,1038,1039,1040,1048,1050,1057,1058,1059,1061,1064,1065,1066,1067,1069,1070,1071,1072,1074,1075,1077,1079,1083,1085,1090,1094,1095,1096,1097,1098,1099,1101,1102,1105,1107,1108,1110,1111,1112,1113,1115,1117,1119,1120,1121,1125,1126,1127,1128,1129,1130,1131,1132,1133,1189,1190,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1231,1232,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1276,1277,1288],input_ax:[905,949,1133],input_channel:[1262,1263,1264,1265,1266,1267,1268,1271,1272],input_queu:1133,inputs_split:1133,insert:[979,1010],insid:43,inspect:1133,inspir:1291,instal:1245,instanc:[15,16,17,18,19,40,41,43,484,864,883,889,905,914,1133,1251,1252,1284,1285],instead:[40,41,484,1196,1198,1199,1200,1201,1202,1203,1204,1291],int32:43,int64:[955,959,979,982,986,1024,1044,1045,1078],int_dtyp:[955,964,974],integ:[40,41,484,835,837,839,841,851,852,860,861,862,955,971,979,982,992,1012,1050,1060,1189,1191,1194],integr:1245,intend:43,inter:1245,interchang:[40,41,979,1066],interest:1245,interfac:[979,986,1288],intermedi:[40,41],intern:[40,41,905,1079,1093,1133,1177,1178,1185,1186,1253,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1284,1285],interpol:[979,1033],intersect:[1113,1114],interv:[40,41,860,861,862,979,982,993,1034,1035,1113,1116,1189,1193],introduc:1291,inv:[768,1102,1291],invalid:[860,861,862],invalid_dtyp:955,invers:[839,840,1102,1104,1106,1113,1114,1115,1116,1117,1119,1291],invert:[1102,1104,1106],invest:1291,invoc:[903,904],irrespect:1245,is_al:1133,is_arrai:[126,289,432,559,688,979,1133],is_float_dtyp:955,is_int_dtyp:955,is_mean:1133,is_sum:1133,is_var:[1239,1243],is_vari:[161,341,468,599,758,1079],isfinit:[85,126,214,289,396,432,517,559,645,688,839],isinf:[289,559,688,979],isinst:1133,isnan:[85,214,396,517,645,839],isnumer:1133,issu:43,item:[15,19,40,41,864,876,877,905,914,915,917,924,926,928,930,936,955,962,979,998,1022,1062,1063,1133,1177,1181,1182,1183,1186,1187,1188,1245,1274,1275,1287],iter:[15,16,17,18,19,40,41,42,903,904,905,908,909,911,912,914,915,918,919,926,928,929,930,931,936,949,979,981,990,996,997,1011,1024,1039,1044,1048,1049,1052,1057,1060,1064,1067,1072,1077,1133,1177,1178,1179,1181,1185,1186],iterbal:[905,926,930,936,1133],its:[484,857,858,905,949,979,1024,1049,1066,1072,1133,1245],itself:[43,1177,1186],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,388,389,390,391,393,394,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,831,832,833,834,835,836,837,839,840,841,842,843,844,845,846,847,848,849,851,852,853,854,857,858,860,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,907,908,909,910,911,912,914,915,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1243,1245,1246,1248,1249,1250,1251,1252,1253,1255,1256,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1289,1290],ivy_backend:[40,41],ivy_bay:1291,ivy_test:43,ivyfcmodel:1287,ivyh:[40,41,42],ivymodul:[192,818],jame:1245,jax:[43,1079,1085,1245,1291],jax_concat:1245,jnp:1245,join:[40,41,979,996,1064,1133],journal:1245,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1245,1262,1271,1291],kaimingnorm:[1253,1257],kalman:1291,kalman_filt:1291,kalman_filter_step:1291,kalman_filter_upd:1291,keep:[40,41,905,950,979,1074,1133,1245,1246,1291],keep_inner_v:[1129,1130,1131],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1129,1130,1131],keepdim:[40,41,432,466,477,478,851,852,860,861,862,979,1074,1102,1105,1196,1198,1199,1200,1201,1202,1203,1204],kei:[15,16,17,40,41,42,43,864,869,905,917,979,998,1129,1130,1131,1133,1177,1180,1184,1214,1225,1226,1245,1251,1252,1262,1273,1278,1282],kept:[40,41,42,1129,1130,1131],kera:1291,kernel:[1214,1224],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,905,914,915,927,931,937,979,983,1005,1006,1007,1036,1133,1177,1181,1274,1275],keyword_color_dict:[40,41,42],kind:[835,836,837,1291],kwarg:[15,16,17,40,41,42,59,63,905,914,927,931,937,979,1036,1133,1233,1234,1235,1239,1251,1252,1274,1275],kwarg_stateful_idx:[1233,1234,1235,1239,1274,1275],kwargs_clon:1133,kwargs_dist:1133,kwargs_uni:1133,label:[43,1227,1228,1229,1230],lamb:[1079,1086,1245,1278],lamb_upd:1079,lambda:[1133,1278,1281,1283,1287],lar:[1079,1086,1087,1245,1278],larger:[835,836,979,993],largest:[40,41,835,836,837,979,984,1012],lars_upd:1079,last:[40,41,853,854,860,861,862,979,982,1000,1033,1060,1064,1102,1105,1108,1196,1201,1203,1206,1211,1214,1224,1262,1272],later:[40,41,979,991],latest:[1262,1271],layer:[1079,1082,1084,1086,1088,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1231,1232,1245,1253,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1284,1285,1291],layer_norm:1231,layernorm:[1245,1276],layerwis:[1079,1087,1278,1281],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1177,1178,1185],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1206,1207,1208],leaky_relu:[810,1206],learn:[839,846,979,1059,1079,1082,1084,1086,1087,1088,1102,1107,1129,1130,1131,1132,1189,1195,1245,1278,1279,1280,1281,1282,1283,1288,1291],learnabl:[1231,1232,1276,1277],leav:[15,18,19,40,41,1177,1178,1179,1185,1186],left:[40,41,43,1102,1105,1196,1198,1199,1200,1201,1202,1203,1204,1245],leftmost:[40,41],len:1133,length:[40,41,42,979,982,1049,1061,1072],lenton2021ivi:1245,lenton:1245,less:[40,41,43,85,214,396,517,645,839,851,852,979,992,1133,1189,1193],less_util_node_str:1133,let:[1288,1291],level:1245,librari:[1245,1287,1291],lightweight:1245,like:[43,1079,1085,1189,1193,1245,1287,1288,1291],limit:[40,41,42,835,836,837,979,993,994,995],linalg:[29,1103,1104,1105,1106,1107,1108,1109,1245],line:43,linear0:[1245,1287],linear1:1245,linear2:1287,linear:[979,1014,1033,1102,1206,1207,1208,1209,1214,1222,1245,1262,1263,1264,1265,1266,1267,1268,1269,1287],linear_algebra:[477,478,479,480,851,852],linear_resampl:[126,289,432,559,688,979],linearli:[979,1014],link:[43,1245],linspac:[126,289,432,559,688,979,982],list:[15,18,19,40,41,43,388,389,390,832,833,834,853,854,860,861,862,905,914,915,924,925,927,928,929,931,934,935,949,979,982,986,988,1039,1058,1060,1069,1074,1129,1130,1131,1133,1177,1178,1179,1181,1185,1186,1214,1215,1216,1217,1218,1219,1220,1221,1245,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269],list_join:[40,41,42],list_stack:[40,41],liter:[851,852],littl:1288,load:[40,41],loaded_kwarg:1133,loader:1245,local:43,local_set:[979,1022],locat:[43,839,845,979,1032,1189,1190],log2:[85,396,517,645,839],log:[779,979,1035,1113,1133,1227,1228,1229,1230,1245],log_all_op:1239,log_global_inference_abs_tim:[1236,1245],log_global_inference_rel_tim:[1236,1245],logarithm:[839,847,1113,1124],logic:[31,839,848,860,861,862,1111,1112,1245],logical_and:[356,776,1110],logical_not:[85,214,396,517,645,839],logical_or:[356,776,1110],logit:[1227,1230],logspac:[126,289,432,559,688,979],look:[43,1288,1291],loop:[1129,1130,1131,1132],loss:[1228,1229,1230,1245,1287],loss_fn:[1245,1287],lot:1288,low:[40,41,484,1189,1191,1193],lower:[40,41,43,979,1038,1189,1193],lower_depth:[1274,1275],lowest:[15,18,19,40,41,1177,1186,1189,1191],lstm:[1214,1224,1245,1262],lstm_updat:[43,1214],machin:[835,836,837,839,846,979,1059,1102,1107,1189,1195,1245,1288,1291],made:43,mai:[979,982,1004,1008,1245,1288,1291],main:[979,1024,1245],mainli:1245,maintain:43,make:[43,484,905,1133,1245,1288],maml:[1129,1130,1131],maml_step:1129,manag:[905,1133],manhattan:[851,852],mani:[40,41,43,979,1060,1245],manipulation_funct:[853,854],manner:[15,18,19,40,41,43,1177,1186],manual:[1177,1178,1185,1291],map:[40,41,42,839,845,905,914,979,1032,1133,1177,1182,1183,1186,1262,1273,1287],map_cont:[40,41],map_nest_at_index:1177,map_nest_at_indic:1177,map_sequ:[40,41],mapper:[905,914,915,1133],mask:[1214,1225,1226],master:43,match:[40,41,979,1036],match_kwarg:979,math:[33,483,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1133,1245],mathbb:[1102,1109],mathbf:[1102,1109],mathemat:[831,851,852],matmul:[43,289,432,559,688,979,1291],matplotlib:1288,matric:[1214,1223],matrix:[40,41,979,981,994,1037,1102,1103,1104,1105,1106,1107,1109,1214,1223,1262,1272],matrix_norm:[40,41,168,350,477,608,768,1102],matter:1245,max:[40,41,391,835,836,837,979,994,995,1006,1038,1051,1052,1133,1196,1198,1278,1280],max_batch_s:[40,41],max_chunk_s:[905,949,1133],max_depth:[40,41,905,909,912,919,927,931,937,979,1022,1133,1177,1186],max_dev_dim_step_ratio:905,max_freq:[979,1014],max_length:[40,41],max_node_dim_step_ratio:1133,max_norm:[40,41,979,994,995],max_split_factor_step_s:[905,1133],max_trust_ratio:[1079,1086,1278,1280],maxim:[1245,1288,1291],maximis:1245,maximum:[40,41,42,688,905,927,931,937,949,979,984,993,994,995,1014,1079,1086,1133,1177,1186,1196,1198],mayb:[15,18,19],mdi:1133,mean:[40,41,484,905,934,935,936,937,949,979,1006,1129,1130,1131,1132,1133,1177,1181,1189,1192,1196,1199,1202,1204,1253,1287,1291],measur:[1214,1225,1262,1273],mech:1245,mechan:[1245,1291],medic:1291,member:43,memori:[905,921,944,949,951,954,1133,1214,1224,1245],merg:43,merge_with_upstream:43,meshgrid:[289,432,688,979],messag:[1289,1290],meta:[35,1130,1131,1132,1245],method:[40,41,42,43,484,979,986,998,1039,1051,1052,1079,1086,1087,1133,1177,1178,1185,1186,1245,1262,1273,1274,1275,1288],might:[979,1004,1291],min:[40,41,391,835,836,837,851,852,979,1006,1040,1051,1052,1062,1102,1107,1133,1196,1200],min_bas:[979,1063],min_denomin:[979,1062],min_dev_dim_s:905,min_node_dim_s:1133,min_sf_tune_step:[905,1133],min_unit_dev_tune_step:905,min_unit_node_tune_step:1133,mind:1245,mini:[1231,1232,1276,1277],minimum:[40,41,688,905,955,959,979,982,985,986,993,1019,1020,1053,1054,1062,1063,1133,1196,1200],miss:[1278,1282],ml_framework:[839,846,979,982,1059,1102,1107],mod:[979,1013],mod_depth:[1274,1275],mod_height:[1274,1275],mod_with_top_mod_key_chain:[1274,1275],mode:[40,41,477,479,903,904,905,934,935,936,937,949,1102,1107,1108,1133,1288],model:[1245,1287],modul:[40,41,42,59,979,1041,1133,1245,1246,1248,1249,1250,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1276,1277,1284,1285,1291],moment:[1079,1081,1082,1086,1278,1279,1280],more:[43,853,854,979,1064,1133,1245,1288,1291],more_util_node_str:1133,most:[40,41,43,1102,1107,1245,1291],move:[40,41,43,905,950,1133],much:[43,1245,1291],multi:[484,979,1041,1214,1225,1262,1273],multi_head_attent:1214,multi_index_nest:1177,multi_map:[40,41],multi_nod:1133,multidev:[905,916,917,918,937],multidevcontain:[40,41],multidevic:[905,914],multidevit:[905,908,911,914,915,919],multidevitem:[905,907,910],multidevnest:[905,909,912],multiheadattent:[1245,1262],multinod:[1133,1137],multinodecontain:1133,multinodeit:1133,multinodeitem:1133,multinodenest:1133,multinomi:[174,360,484,615,794,1189],multipl:[40,41,860,861,862,979,1036,1060,1102,1104,1196,1198,1199,1200,1201,1202,1204,1231,1232,1262,1272,1288],multipli:[40,41,979,1001,1196,1201],multiprocess:[40,41,42,432,688,905,914,979,1133],must:[40,41,42,43,832,833,834,839,840,841,844,846,849,851,852,853,854,860,861,862,864,883,889,905,934,935,936,937,949,979,982,996,998,1000,1008,1038,1040,1052,1059,1064,1113,1118,1121,1133,1189,1194,1278,1282],mutabl:[1177,1179,1186],mutlidevic:[905,914],mutlinod:1133,mw_tm1:[1079,1082,1086],mx_concat:1245,mxnet:[43,1245,1291],my_func:43,mymodel:1245,name:[903,904,1233,1234,1235,1239,1287],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1288],nan:[40,41,831,839,840,844,845,979,1023,1075],nativ:[15,17,18,19,40,41,43,905,921,923,932,933,944,951,954,955,960,967,968,1133,1245,1246,1251,1252],native_modul:[1251,1252],native_module_class:[1251,1252],nativearrai:[15,18,19,43,835,836,837,839,840,841,842,843,844,845,846,847,848,849,851,852,853,854,857,858,860,861,862,864,883,889,905,923,949,950,955,959,965,970,971,979,980,981,982,984,985,986,987,988,990,992,993,994,995,996,997,999,1000,1001,1002,1005,1006,1007,1008,1010,1011,1012,1013,1014,1016,1017,1021,1023,1024,1025,1032,1033,1034,1035,1037,1038,1039,1040,1043,1044,1045,1048,1049,1050,1051,1052,1057,1059,1060,1061,1064,1066,1067,1069,1070,1071,1072,1074,1075,1076,1077,1078,1133,1177,1179,1186],natur:[1113,1124,1291],ncdhw:[1214,1219,1220,1262,1267,1268],nchw:[1214,1217,1218,1221,1262,1265,1266,1269],ncw:[1214,1215,1216,1262,1263,1264],ndarrai:[43,388,389,390,391,393,394,484,979,1070],ndhwc:[1214,1219,1220,1262,1267,1268],nearest:[979,1050],need:[43,979,994,995,1214,1216,1218,1220,1245,1262,1264,1266,1268,1291],neg:[40,41,839,844,851,852,853,854,860,861,862,1196,1201,1203,1206,1208],negative_slop:1253,neither:1133,nest:[15,16,17,18,19,40,41,42,905,927,931,937,979,986,1069,1129,1130,1131,1133,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1274,1275,1278,1279,1280,1281,1282,1283],nested_indices_wher:1177,nested_map:[1133,1177],network:[1214,1223,1245,1246,1248,1262,1274,1275,1291],neural:[1214,1245,1248,1262,1287],new_node_percent_mem:1133,new_node_util:1133,new_node_utils_kei:1133,new_std:[1231,1232,1276,1277],newli:[43,903,904,979,990,991],newlin:[40,41,42],newshap:[979,990,1049],next:[835,836,1133,1274,1275,1278,1279,1280,1281,1282,1283],nhwc:[1214,1217,1218,1221,1262,1265,1266,1269],node:[40,41,1177,1178,1185],node_clon:1133,node_dist:1133,node_dist_arrai:1133,node_dist_it:1133,node_in:1133,node_mapp:1133,node_str:1133,node_to_str:1133,node_util:1133,nodedistit:1133,nodedistitem:1133,nodedistnest:1133,nodemanag:[1133,1144],nodemapp:1133,nodemappermultiproc:1133,noinspect:[43,906,956,957,958,1080,1133,1240],non:[40,41,851,852,860,861,862,903,904,955,969,1274,1275,1278,1282,1288],none:[40,41,42,43,59,61,64,388,389,390,430,432,433,436,438,445,446,447,448,456,457,458,459,460,461,463,464,465,467,477,478,484,485,832,833,834,835,836,837,839,846,851,852,853,854,860,861,862,903,904,905,914,915,921,922,947,948,949,950,955,962,963,964,979,982,986,1003,1004,1009,1011,1015,1016,1017,1022,1024,1026,1027,1028,1029,1030,1034,1035,1041,1043,1044,1045,1048,1051,1052,1053,1054,1059,1060,1061,1062,1063,1072,1073,1078,1079,1082,1084,1086,1087,1088,1094,1095,1099,1102,1105,1107,1129,1130,1131,1132,1133,1177,1178,1181,1185,1186,1189,1190,1191,1192,1193,1196,1198,1199,1200,1201,1202,1203,1204,1214,1216,1218,1220,1223,1224,1225,1226,1231,1232,1233,1234,1235,1239,1243,1251,1252,1253,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285],norm:[40,41,851,852,979,994,995,1102,1105,1232,1245,1277,1278,1280],normal:[1189,1192,1231,1232,1276,1277],normalized_idx:[1231,1232],normalized_shap:[1276,1277],notat:[40,41,1196,1197],note:[43,1102,1107],noth:[40,41,1288],notimplementederror:1133,now:[40,41,905,950,979,980,1133,1245,1262,1273,1274,1275,1287,1288,1291],np_concat:1245,np_finfo:391,ns_tune_step:1133,num:[432,456,457,979,1034,1035],num_arrai:[40,41],num_arrays_in_memori:979,num_arrays_on_dev:905,num_band:[979,1014],num_channel:[1262,1269],num_chunk:1133,num_chunks_floor:1133,num_class:[1189,1190],num_cpu_cor:905,num_gpu:[119,430,905,1133],num_head:[1214,1225,1262,1273],num_kei:[1214,1225,1226],num_lay:[1262,1271],num_or_size_split:[40,41,432,463,979,1060],num_output:1133,num_queri:[1214,1225,1226],num_sampl:[432,455,484,485,979,1033,1095,1096,1189,1190],num_task:[1129,1130,1131,1132],number:[40,41,42,831,835,836,837,839,845,860,861,862,903,904,905,941,942,943,955,966,970,971,979,982,993,997,1010,1014,1021,1024,1033,1034,1035,1038,1042,1048,1059,1060,1067,1071,1075,1077,1102,1108,1129,1130,1131,1132,1133,1189,1190,1194,1196,1198,1199,1200,1202,1204,1214,1225,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1288,1291],numer:[43,839,844,864,883,889,979,1019,1020,1053,1054,1059,1062,1063,1113,1121,1253],numhead:[1214,1225],numpi:[40,41,43,388,389,390,391,393,394,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,979,1070,1102,1107,1108,1196,1197,1245,1287,1288,1291],nwc:[1214,1215,1216,1262,1263,1264],obj:[40,41],object:[40,41,42,59,391,835,836,837,905,955,959,979,982,986,1079,1177,1180,1182,1183,1184,1187,1188,1189,1195,1239,1243,1253,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1274,1275],object_in:[432,436,979,986],observ:1133,occupi:[835,836,837,979,1051,1052],off:[979,982],offer:1245,offset:[1231,1232],often:1288,old:[40,41],on_init:[1262,1273,1274,1275],onc:[43,905,949,1133,1189,1190,1245],one:[40,41,43,851,852,853,854,905,934,935,936,937,949,955,961,979,1024,1036,1043,1051,1052,1061,1064,1102,1105,1133,1196,1197,1198,1199,1200,1201,1202,1203,1204,1245,1288,1291],one_hot:[126,432,559,688,979],onearrai:[979,1010],ones:[40,41,77,206,388,509,637,832,979,1024,1043,1045,1245],ones_lik:[126,289,432,559,688,979],ongo:43,onli:[40,41,43,484,853,854,905,1102,1107,1133,1177,1178,1179,1185,1278,1279,1280,1281,1282,1283,1287,1288],onlin:1245,onto:[905,934,935,950,1133,1177,1181,1186],oom:[905,1133],open:[979,982,1189,1193,1245,1291],opencv:1288,oper:[40,41,839,848,979,989,1005,1006,1007,1034,1035,1065,1079,1082,1084,1086,1087,1088,1110,1111,1112,1214,1215,1216,1217,1218,1219,1220,1221,1223,1245,1246],operand:[40,41,839,840,1196,1197],oppos:[979,1014],optim:[905,1079,1082,1084,1086,1087,1088,1129,1130,1131,1132,1133,1245,1279,1280,1281,1283,1287,1291],optimizer_upd:1079,option:[15,18,19,40,41,42,43,388,389,390,832,833,834,839,846,851,852,853,854,860,861,862,903,904,905,914,915,923,927,928,929,930,931,934,935,936,937,944,947,948,949,950,954,955,960,965,969,978,979,981,982,984,985,986,994,995,996,1001,1003,1004,1011,1014,1015,1016,1017,1021,1023,1024,1031,1033,1034,1035,1036,1039,1041,1043,1044,1045,1048,1051,1052,1055,1057,1059,1060,1061,1062,1063,1064,1072,1074,1075,1078,1079,1082,1084,1085,1086,1087,1088,1090,1095,1099,1102,1105,1107,1129,1130,1131,1132,1133,1177,1178,1179,1181,1185,1186,1189,1190,1196,1198,1199,1200,1201,1202,1203,1204,1206,1207,1211,1214,1222,1223,1225,1226,1227,1228,1229,1230,1231,1232,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1288],ord:[851,852,979,1011,1102,1108],order:[40,41,42,43,851,852,853,854,857,858,1079,1082,1084,1086,1087,1088,1102,1105,1129,1130,1131,1284,1285],ordered_node_util_kei:1133,org:1291,organ:43,origin:[40,41,42,979,1045,1049,1078,1102,1105],other:[40,41,43,864,866,867,872,874,875,879,881,882,883,884,885,887,889,890,891,892,893,894,896,897,898,900,901,902,903,904,979,981,982,1024,1079,1083,1189,1193,1245,1287,1288,1291],other_i:[43,864,883,889],otherwis:[15,16,17,18,19,40,41,839,844,851,852,860,861,862,905,922,955,962,963,964,979,989,1072,1073,1076,1079,1085,1090,1094,1129,1130,1131,1133,1196,1198,1199,1200,1202,1204],our:[43,1245,1291],out:[484,864,883,979,982,1113,1117,1214,1222,1224,1245,1262,1270],out_feat_dim:[1214,1225],out_featur:[1214,1222,1223],out_i:[839,844],outdat:1291,outer:[1129,1130,1131,1132],outer_batch_fn:[1129,1130,1131],outer_batch_shap:[1214,1223],outer_cost_fn:[1129,1130,1131],outer_v:[1129,1130,1131],outlin:1288,output:[40,41,43,832,833,834,853,854,905,914,915,949,979,982,991,1015,1024,1048,1067,1079,1083,1113,1118,1133,1189,1191,1192,1193,1214,1216,1218,1220,1222,1224,1225,1226,1245,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273],output_ax:[905,949,1133],output_axi:1133,output_channel:[1262,1263,1264,1265,1266,1267,1268,1271,1272],output_connected_onli:[1233,1235,1239,1274,1275],output_queu:1133,output_shap:[1214,1216,1218,1220,1262,1264,1266,1268],outsid:[979,993],over:[40,41,851,852,860,861,862,979,1011,1102,1105,1189,1193,1196,1198,1199,1200,1202,1204,1231,1232,1276,1277],overal:1288,overflow:[979,982],overhead:1288,overrid:[979,1043,1045,1078],overriden:[1278,1282],overwrit:[40,41,905,949,1133],overwrite_at_key_chain:[40,41],own:[1245,1288,1291],packag:[43,1288],pad:[979,997,1014,1077,1214,1215,1216,1217,1218,1219,1220,1221,1262,1263,1264,1265,1266,1267,1268,1269],pad_width:[432,979,997,1077],page:1245,pair:[1214,1226],parallel:[905,914,915,1133],parallelis:[905,914,915,1133],param:[40,41,42,43,432,446,447,839,849,905,949,979,980,1016,1017,1043,1044,1059,1133,1244,1245,1274,1275,1287],paramet:[15,16,17,18,19,40,41,42,832,833,834,835,836,837,839,840,841,842,843,844,845,846,847,848,851,852,853,854,857,858,860,861,862,864,883,889,903,904,905,914,915,921,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,944,947,948,949,950,951,954,955,959,960,961,965,966,967,968,969,970,971,978,979,981,982,984,985,986,987,988,989,990,991,992,993,994,995,996,997,999,1000,1001,1002,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1021,1023,1024,1025,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1044,1045,1048,1049,1050,1051,1052,1053,1054,1055,1057,1058,1060,1061,1062,1063,1064,1065,1066,1067,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1081,1082,1083,1084,1085,1086,1087,1088,1090,1092,1093,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287],parameter:[1189,1192,1193],params_all_empti:1239,pardo:1245,pars:[979,998],part:[1079,1082,1084,1086,1087,1088,1113,1117,1245,1274,1275,1288],partial:[40,41,1274,1275],particl:1291,particular:[43,1291],pass:[40,41,42,43,905,914,949,955,960,979,991,1079,1093,1129,1130,1131,1133,1251,1252,1274,1275,1278,1282,1284,1285],pattern:[40,41,979,1005,1006,1007],per:[905,1133,1214,1215,1216,1217,1218,1219,1220,1221,1262,1263,1264,1265,1266,1267,1268,1269],percent_used_mem_on_dev:905,percent_used_mem_on_nod:1133,percentag:[905,944,1133],perf_count:1133,perform:[40,41,43,857,858,860,861,862,905,979,984,985,1001,1005,1006,1007,1027,1028,1029,1033,1034,1035,1079,1082,1084,1086,1087,1088,1095,1096,1129,1130,1131,1132,1133,1177,1182,1183,1196,1198,1199,1200,1201,1202,1203,1204,1206,1211,1214,1222,1224],permissable_step:1133,permit:43,permut:[484,979,1066,1072],perpendicular:[979,1000],person:1245,physci:1291,pickl:[40,41,1133],pickle_filepath:[40,41],pid:1239,pinv:[350,768,1102],pip:1245,pipelin:1287,pkk:1291,pkkm1:1291,pkm1km1:1291,place:[40,41,43,832,833,834,905,950,979,1010,1015,1027,1028,1029,1133,1278,1279,1280,1281,1282,1283],placehold:[1177,1186],pleas:[484,1102,1107],point:[43,831,832,833,834,835,836,839,840,849,851,852,955,970,979,982,1113,1121],popul:[40,41,1189,1190],popular:1291,population_s:[484,485,1189,1190],portabl:[1245,1246],posit:[15,16,17,835,836,839,844,905,927,931,937,979,980,982,1010,1014,1133,1189,1194,1251,1252],possibi:[40,41],possibl:[979,1036,1069,1095,1100,1291],post:[1231,1232],post_shap:[40,41],power:[43,864,889,895,979,1019,1053,1063,1253],practic:1245,pre:[905,1133,1245],pre_shap:[40,41],precis:[835,836,839,849],pred:[1227,1228,1229,1230],predict:[1227,1228,1229,1230,1291],preprint:1245,present:[40,41],preserv:[40,41,42,853,854,979,1011,1079,1090],preserve_typ:[40,41,468,471,1079,1090],press:1245,prevent:[43,1079,1081,1082,1086,1133,1278,1279,1280],previou:[1079,1082,1086],previous:[979,991],prime:1245,print:[40,41,42,905,945,979,1046,1245,1287],print_all_arrays_in_memori:979,print_all_arrays_on_dev:905,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1278,1282],prob:[484,485,1189,1190,1214,1222,1262,1270],probabl:[1189,1190,1214,1222,1262,1270],problem:[43,1291],process:[43,905,914,915,944,954,979,1041,1133],process_specif:[905,944,954,1133],prod:[40,41,979,1006],produc:[905,914,915,1133],product:[40,41,979,1000,1001,1037,1196,1197,1214,1225,1226,1262,1273],profil:[119,283,430,552,680,905,1133],project:[1245,1287,1288,1291],promot:[43,839,840,841,849,851,852,864,889,1113,1121],prompt:1245,properli:43,properti:[40,41,391,905,917,1133,1239,1243,1274,1275,1278,1279,1280,1281,1283],provid:[40,41,43,853,854,860,861,862,903,904,905,922,955,962,963,964,969,978,979,1004,1043,1045,1052,1078,1079,1082,1084,1086,1087,1088,1094,1133,1245,1262,1271,1278,1279,1280,1281,1282,1283,1288],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1102,1106],ptype:[1239,1243],pull:[1245,1246],pure:[40,41,1245,1291],purpos:1291,put:1133,pybroadexcept:1133,pyprotectedmemb:[1133,1240],pyshadowingbuiltin:43,pyshadowingnam:[906,956,957,958,1080,1133],python:[40,41,905,944,954,979,982,1133,1245],pytorch:[1079,1082,1084,1086,1087,1088,1102,1107,1245,1278,1279,1280,1281,1282,1283,1287,1288,1291],pyunresolvedrefer:1133,quadrant:[1113,1118],queri:[40,41,864,878,899,905,938,948,1133,1214,1225,1226,1262,1273],query_dim:[1262,1273],query_kei:[40,41],queue:[40,41,42,905,914,915,979,1047,1055,1133],queue_class:[905,914,915,1133],queue_load_s:[40,41,42],queue_timeout:[40,41,42,979,1133],quick:[484,1245],quickli:[43,1287],radian:[839,842,1113,1114,1116,1118,1125,1127],rai:[1113,1114],rais:[40,41,43,860,861,862,864,889,979,989,1019,1053,1061,1063,1073,1133,1274,1275,1278,1282],ram:[905,944,951,954,1133],randint:[174,360,484,615,794,1189],random:[37,40,41,485,1190,1191,1192,1193,1194,1195,1245],random_crop:1095,random_norm:[174,360,484,615,794,1189],random_uniform:[174,360,484,615,794,1189],randomli:[484,1095,1099,1214,1222,1262,1270],randomness_factor:[1233,1235,1239,1274,1275],rang:[484,979,982,1034,1035,1113,1118,1133,1245,1287,1291],rank:[851,852,860,861,862,979,997,1074,1077],rate:[1079,1082,1084,1086,1087,1088,1129,1130,1131,1132,1262,1273,1278,1279,1280,1281,1282,1283],rather:[40,41,905,949,979,982,1031,1079,1085,1133],ratio:[905,1079,1086,1095,1100,1133,1278,1280],raw:[40,41,1102,1107],raw_delta:1133,reach:[905,927,931,937,1133,1177,1186],read:[40,41],readi:[1133,1287],real:[1113,1114,1117],realiti:1288,rearrang:[40,41,979,1005,1007],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1129,1131],receiv:[905,914,915,979,983,1036,1133,1262,1272],receivess:[905,1133],receiving_fn:1239,receivng:[1129,1132],recev:[1129,1130,1131],recognit:1291,recommend:1245,rectifi:[1206,1208,1209],recurr:[1214,1224],recurrent_bia:[1214,1224],recurrent_kernel:[1214,1224],recurs:[40,41,1177,1178,1179,1185,1186],redefin:43,reduc:[40,41,860,861,862,905,949,979,1006,1102,1107,1133,1196,1198,1199,1200,1201,1202,1203,1204],reduce_max:[40,41,181,365,486,620,801,1196],reduce_mean:[40,41,181,365,486,620,801,1196,1245,1287],reduce_min:[40,41,181,365,486,620,801,1196],reduce_prod:[40,41,181,365,486,620,801,1196],reduce_std:[40,41,365,1196],reduce_sum:[40,41,181,365,486,620,801,1133,1196],reduce_var:[40,41,181,365,486,620,801,1196],reduct:[39,40,41,432,460,461,860,861,862,979,1006,1051,1052,1197,1198,1199,1200,1201,1202,1203,1204,1245],refactor:43,refer:[43,860,861,862,1079,1081,1082,1102,1109,1262,1272,1291],reflected_oper:[0,13,14],regard:[905,1133],regardless:[40,41,903,904],register_paramet:1287,reimplement:1291,rel:[853,854,1079,1082,1084,1086,1087,1088],rel_slice_obj:1133,relev:[1278,1279,1280,1281,1282,1283],relu:[810,1206,1207,1208,1245,1287],remain:[43,979,1049,1177,1181],remaind:[40,41,979,1013,1060],remov:[40,41,979,1061,1129,1130,1131],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,853,854,979,1011],rep:[979,1067],repeat:[40,41,43,289,688,979,1007,1067,1133,1288],repeated_config_check:[905,1133],repeatedli:[1177,1184],repetit:[40,41,979,1048,1067],replac:[40,41,43,484,485,979,993,1051,1052,1189,1190],repo:[43,1245],repres:[43,839,840,955,961,966,1214,1223],represent:[40,41,42,43,831,835,836,837,839,841,905,932,933,955,961,967,968,979,1058,1069,1133],reptil:[1129,1132],reptile_step:1129,request:[1245,1246],requir:[43,839,849,903,904,955,959,979,982,986,1251,1252],resampl:[979,1033],reserv:43,reshap:[40,41,43,484,688,979],reshape_lik:[40,41],respect:[839,841,846,864,883,979,1008,1079,1081,1082,1083,1084,1086,1087,1088,1102,1107,1113,1121,1129,1130,1131,1132],respond:43,respons:1133,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,839,840,841,844,846,848,849,851,852,860,861,862,864,883,889,905,914,979,982,1008,1051,1052,1059,1064,1102,1105,1110,1111,1112,1113,1121,1133,1196,1198,1199,1200,1201,1202,1203,1204,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1245],ret:1133,ret_dict:1133,ret_fn:[905,914,915,1133],retain:[1079,1083],retain_grad:[468,469,1079,1083],retreiv:1133,retrn:[979,1058],return_cont:[40,41],return_dict:[40,41],return_graph:[1233,1234,1235],return_inner_v:[1129,1130,1131,1132],return_sequ:[1262,1271],return_st:[1262,1271],rev:[979,1004],revers:[40,41,853,854,979,1004,1011,1072],review:43,right:[40,41,43],rk_e:1291,robot:1245,ronald:1245,root:[43,839,849],round:[289,432,688,839,849,979,982,1133],row:[979,1024,1189,1190],rule:[43,839,841,849,864,889,979,982,1113,1121],run:[43,905,914,1079,1081,1082,1086,1129,1130,1131,1132,1133,1245,1246,1262,1273,1274,1275],safe:[905,914,1133],safety_factor:[905,1133],same:[15,16,17,40,41,43,853,854,905,914,915,949,950,955,959,979,980,992,996,1012,1013,1016,1017,1043,1045,1050,1051,1052,1059,1064,1078,1079,1085,1090,1102,1108,1113,1117,1129,1130,1131,1133,1196,1197,1214,1215,1216,1217,1218,1219,1220,1221,1245,1262,1263,1264,1265,1266,1267,1268,1269,1287,1291],same_arrai:[40,41],sampl:[979,1033,1095,1096,1189,1190,1192,1193,1214,1222,1245,1262,1270],satisfi:[979,986,1102,1104,1109],save:[40,41,979,1056,1068,1095,1097,1274,1275],save_debug_info:1239,save_dir:[430,431,905,920,1133],save_to_disk:[1233,1235,1239,1274,1275],save_weight:[1274,1275],scalar:[851,852,979,993,1043,1071,1075],scale:[905,947,948,1079,1087,1133,1214,1222,1225,1226,1231,1232,1262,1270,1273,1278,1281],scaled_dot_product_attent:1214,scatter:[979,1043,1051,1052],scatter_flat:[126,289,432,559,688,979],scatter_nd:[126,289,432,559,688,979],scene:[1079,1082,1084,1086,1087,1088],schemat:1245,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,839,841,905,936,979,987,1000,1008,1047,1055,1066,1079,1081,1082,1086,1129,1131,1133,1278,1279,1280],secondli:1291,sector:[839,840],see:[43,59,391,430,431,484,839,841,851,852,860,861,862,864,883,889,905,917,918,919,920,955,979,982,1034,1035,1079,1113,1121,1239,1243,1245,1253,1255,1256,1258,1259,1261],seed:[40,41,174,484,794,1189],seed_valu:[40,41,484,1189,1194],seem:1245,seen_set:[979,1022],select:[979,986,1061,1288,1291],self:[40,41,43,59,391,430,431,864,883,889,905,917,918,919,920,955,1079,1133,1239,1243,1245,1253,1255,1256,1258,1259,1261,1278,1282,1287,1291],self_i:[864,883],sent:1133,seper:[43,979,1014],seq:[40,41,42,1196,1197,1274,1275],sequenc:[15,16,17,40,41,42,43,484,903,904,905,914,915,924,925,926,927,928,929,930,931,934,935,949,955,959,979,982,986,988,990,996,997,1011,1024,1036,1039,1044,1048,1049,1052,1060,1064,1067,1072,1077,1079,1083,1095,1099,1100,1102,1105,1133,1177,1188,1189,1191,1193,1196,1198,1199,1200,1201,1202,1203,1204,1214,1215,1216,1217,1218,1219,1220,1221,1231,1232,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269,1271,1274,1275,1276,1277,1278,1282,1284,1285],sequenti:1245,seri:43,set:[15,18,19,40,41,905,934,935,947,948,949,979,981,1003,1024,1053,1054,1055,1056,1079,1082,1084,1085,1086,1087,1088,1102,1105,1133,1177,1178,1185,1187,1188,1189,1190,1194,1196,1198,1199,1200,1201,1202,1203,1204,1243,1245,1262,1271,1278,1279,1280,1281,1282,1283,1288,1291],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1243,set_debug_mod:44,set_default_devic:905,set_default_dtyp:955,set_default_float_dtyp:955,set_default_int_dtyp:955,set_default_nod:1133,set_exception_debug_mod:44,set_framework:[40,41,43,59,1133,1245,1287,1288,1291],set_ivy_backend:[40,41],set_min_bas:979,set_min_denomin:979,set_nest_at_index:1177,set_nest_at_indic:1177,set_param:1239,set_queue_timeout:979,set_split_factor:[905,1133],set_stat:[1278,1279,1280,1281,1282,1283],set_tmp_dir:979,set_with_grad:1079,setter:1133,sever:1291,sgd:[1245,1278],shape0:1133,shape:[40,41,43,388,389,390,432,445,461,484,688,832,833,834,853,854,905,917,955,959,979,980,990,992,996,997,1010,1011,1012,1013,1015,1017,1021,1024,1043,1044,1045,1048,1049,1050,1051,1052,1058,1061,1064,1077,1078,1095,1099,1102,1104,1107,1113,1117,1118,1133,1189,1191,1192,1193,1196,1197,1214,1216,1218,1220,1239,1243,1262,1264,1265,1266,1267,1268,1269,1276,1277],shape_slic:[40,41],shape_to_tupl:979,share:[40,41,1245,1288],shift:1133,should:[40,41,42,43,484,839,840,841,844,849,851,852,864,883,889,903,904,905,979,990,991,998,1043,1049,1059,1079,1082,1084,1086,1087,1088,1113,1121,1133,1196,1197,1245],show:[40,41,1239,1245,1291],show_debug_info:1239,show_graph:[1233,1245,1274,1275,1278,1282],show_mod_in_top_mod:[1274,1275],show_structur:[1274,1275],show_sub_contain:[40,41],show_v:[1274,1275],show_v_in_top_v:[1274,1275],shown:[40,41],shp:1133,shuffl:[40,41,174,484,794,1189],shuffle_h5_fil:[40,41],sigmoid:[810,1206,1245,1287],sign:[126,289,432,559,688,979],signatur:[43,59,391,430,431,432,468,473,477,481,482,484,905,917,918,919,920,955,1079,1239,1243,1253,1255,1256,1258,1259,1261],signific:1291,similar:[43,1214,1225,1262,1273],similarli:[1102,1107],simpl:[43,979,1009,1245,1288,1291],simpler:43,simplest:1288,simpli:[40,41,43,1245,1288,1291],simultan:1245,sin:[779,979,1014,1113,1127,1288],sinco:1288,sine:[839,840,1113,1116,1125,1126],singl:[40,41,903,904,905,914,915,934,935,936,937,979,1061,1071,1075,1095,1100,1133,1189,1192,1193,1196,1198,1199,1200,1201,1202,1203,1204,1245,1288,1291],singleton:[851,852,860,861,862],singular:[1102,1108],sinh:[779,1113],siren:[1245,1253],size:[40,41,42,432,460,905,928,929,930,931,947,948,949,979,982,990,1034,1035,1051,1060,1095,1099,1102,1105,1108,1133,1189,1190,1192,1193,1196,1198,1199,1200,1201,1202,1203,1204,1262,1263,1264],size_ordered_arrai:[40,41],skew:[1102,1109],skinv:1291,skip:[40,41],slice:[40,41,857,858,979,1016,1017,1133,1177,1184],slice_kei:[40,41],slice_obj:[40,41,1133],slice_via_kei:[40,41],slide:[1214,1215,1216,1217,1218,1219,1220,1221,1262,1263,1264,1265,1266,1267,1268,1269],slope:[1206,1208],small:[1227,1228,1229,1230,1231,1232,1245,1276,1277,1288],smaller:[979,993],smallest:[40,41,835,836,837,979,985,992],smallest_norm:[391,835,836],softmax:[190,495,810,1206,1214,1225,1226],softplu:[810,1206],solv:1291,some:[40,41,43,979,982,1079,1081,1082,1084,1086,1087,1088,1093,1214,1222,1245,1262,1270,1288,1291],some_backend:43,some_namespac:43,someth:[43,1291],something_cool:43,somewher:[40,41],sort:[40,41,42,858,1102,1108,1133],sort_by_kei:[40,41],sorting_funct:[857,858],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,388,389,390,391,393,394,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,482,483,484,485,832,833,834,835,836,837,839,840,841,842,843,844,845,846,847,848,849,851,852,853,854,857,858,860,861,862,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,907,908,909,910,911,912,914,915,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1243,1248,1249,1250,1251,1252,1253,1255,1256,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1289,1290,1291],space:[979,982,1014,1034,1035],spars:[1227,1230],sparse_cross_entropi:1227,spawn:[979,1041],special:[839,840],specif:[40,41,43,905,947,979,998,1005,1006,1007,1041,1129,1130,1131,1132,1133,1189,1195,1245,1274,1275,1287,1288],specifc:[1189,1190],specifi:[40,41,43,851,852,853,854,860,861,862,905,924,925,926,927,928,929,930,931,934,935,939,941,945,948,949,950,955,959,961,979,982,984,985,986,993,996,997,1015,1016,1017,1023,1034,1035,1064,1074,1077,1102,1105,1133,1177,1182,1183,1187,1188,1196,1197,1198,1199,1200,1201,1202,1203,1204],split:[40,41,126,289,432,559,688,905,914,928,929,930,931,947,948,949,979,1036,1133],split_arg:1133,split_factor:[905,914,1133],split_func_cal:[905,1133],split_siz:1133,spread:[905,937,1133],sqrt:[85,214,396,517,645,839,851,852],squar:[839,849,979,1024,1102,1104],squeez:[126,289,432,559,688,979],stabil:[857,858,979,1062,1063],stabl:[857,858,979,1019,1020,1053,1054,1062,1063],stable_divid:979,stable_pow:979,stack:[40,41,289,688,979,1095,1100,1177,1178,1185,1262,1271],stack_imag:[164,346,473,604,764,1095],stacked_dim_s:1133,stage:43,standard:[40,41,835,836,1189,1192,1196,1202,1231,1232,1245,1246,1276,1277],start:[40,41,43,430,431,432,433,456,457,484,905,920,979,982,1034,1035,1133,1245,1288],starting_index:[40,41],starting_split_factor:[905,1133],state:[1133,1214,1224,1233,1234,1235,1239,1245,1248,1249,1250,1251,1252,1253,1255,1256,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287],statement:1288,static_argnam:[432,438,903,904],static_argnum:[432,438,903,904],std:[484,1189,1192],step:[40,41,432,433,905,979,982,1034,1035,1079,1081,1082,1084,1086,1087,1088,1129,1130,1131,1132,1133,1245,1278,1279,1280,1281,1282,1283,1287,1291],stephen:1245,stick:1245,still:[40,41,43],stochast:[1278,1283],stop:[40,41,430,431,432,433,456,457,905,920,949,979,982,1034,1035,1079,1082,1084,1086,1087,1088,1090,1129,1130,1131,1132,1133,1278,1279,1280,1281,1282,1283],stop_gradi:[40,41,341,468,599,758,905,949,1079,1082,1084,1086,1087,1088,1129,1130,1131,1132,1133,1278,1279,1280,1281,1282,1283],stopiter:1133,store:[40,41,979,1014,1060,1079,1093,1274,1275],store_var:[1274,1275],str:[15,16,17,40,41,42,43,388,389,390,391,393,394,835,836,837,903,904,905,914,915,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,949,955,960,961,966,967,968,969,970,971,978,979,986,1003,1005,1006,1007,1039,1041,1044,1051,1052,1102,1105,1107,1129,1130,1131,1132,1133,1177,1181,1196,1197,1251,1252,1262,1273,1274,1275],str_to_nod:1133,straight:1288,strength:[1245,1291],stride:[1214,1215,1216,1217,1218,1219,1220,1221,1262,1263,1264,1265,1266,1267,1268,1269],string:[40,41,43,905,921,923,932,933,938,944,950,951,954,955,959,965,967,968,969,978,979,982,986,1003,1024,1044,1045,1078,1133,1214,1215,1216,1217,1218,1219,1220,1221,1262,1263,1264,1265,1266,1267,1268,1269,1274,1275],structur:[40,41,42,43,979,998],structural_diff:[40,41],sub:[40,41,905,928,929,934,935,936,937,979,1060,1129,1130,1131,1132,1133],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1133,sub_mod:[1274,1275],sub_modul:[1284,1285],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1245,1246,1276,1277,1284,1285],subsequ:43,subset:43,substr:[40,41],suffici:[1102,1107],suggest:1245,suitabl:[1095,1100],sum:[40,41,432,460,461,851,852,905,934,935,936,937,949,979,1002,1006,1051,1052,1133,1196,1197,1203],summat:[40,41,1196,1197],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,95,98,100,104,107,108,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,165,166,167,169,170,171,175,176,177,178,179,180,182,183,184,185,186,187,188,191,193,194,196,197,198,199,200,201,202,207,208,210,211,212,215,216,217,218,219,220,223,225,229,232,233,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,342,343,344,345,347,348,349,351,352,353,354,355,357,358,361,362,363,364,366,367,368,369,370,371,372,373,376,378,379,380,381,382,383,384,389,390,392,393,394,397,398,399,400,401,402,403,404,405,406,409,411,415,418,419,431,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,469,470,471,472,474,475,476,478,479,480,483,485,487,488,489,490,491,492,493,496,497,499,500,501,502,503,504,505,510,511,513,514,515,518,519,520,521,522,523,524,525,526,527,530,532,536,539,540,548,553,554,555,556,557,558,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,600,601,602,603,605,606,607,609,610,611,612,616,617,618,619,621,622,623,624,625,626,627,631,632,633,638,639,641,642,643,646,647,648,649,650,651,652,653,654,655,658,660,664,667,668,676,681,682,683,684,685,686,687,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,759,760,761,762,763,765,766,767,769,770,771,772,773,774,775,777,778,780,781,782,783,784,785,786,787,788,789,790,791,792,793,795,796,797,798,799,800,802,803,804,805,806,807,808,811,812,813,814,815,816,817,819,820,822,823,824,825,826,827,828,833,834,836,837,840,841,842,843,844,845,846,847,848,849,851,852,854,858,861,862,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,904,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1111,1112,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1130,1131,1132,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1190,1191,1192,1193,1194,1195,1197,1198,1199,1200,1201,1202,1203,1204,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1229,1230,1232,1234,1235,1237,1238,1240,1244,1245,1249,1250,1252,1254,1255,1256,1257,1258,1259,1260,1261,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1275,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1288,1290,1291],supports_inplac:979,suppos:1291,sure:43,svd:[350,608,768,1102],swap:[40,41,979,1066],swapax:[40,41,559,688,979,1291],symmetr:[1102,1109],syntax:[430,432,468,473,477,481,482,484],tab:1245,take:[43,979,1033],taken:[1196,1198,1199,1200,1202,1204],tan:[779,1113,1117],tangent:[1113,1117,1118,1119,1127,1128,1206,1213],tanh:[779,810,1113,1206],target:[40,41,905,921,924,925,926,927,928,929,930,931,934,935,936,937,950,1133,1245],target_dict:[40,41],task:[43,1129,1130,1131,1132],team:[43,1291],templat:1245,temporari:[979,1056,1068],tensor:[40,41,43,432,460,461,857,858,905,923,955,965,979,982,984,985,990,1034,1035,1038,1040,1043,1044,1045,1049,1051,1052,1060,1078,1133,1189,1190,1191,1214,1222,1224,1245,1262,1270,1272,1278,1279,1280,1281,1282,1283,1287,1288],tensorflow:[43,1102,1107,1214,1216,1218,1220,1245,1262,1264,1266,1268,1288,1291],term:[40,41,1214,1224,1245,1262,1272],termcolor:[40,41,42],termin:[40,41,42,1133],test:[43,839,844,860,861,862,955,970,971],test_array_api:43,tf_concat:1245,than:[40,41,835,836,851,852,853,854,905,949,979,982,992,993,1012,1031,1038,1061,1064,1079,1085,1133,1189,1193,1245,1288],thei:[40,41,43,1113,1118,1129,1130,1131,1189,1190,1245,1284,1285,1288],them:[1245,1291],themselv:[1177,1178],therefor:43,thi:[40,41,42,43,905,927,931,937,944,949,954,979,982,1014,1047,1049,1055,1079,1082,1084,1085,1086,1087,1088,1093,1102,1105,1133,1177,1181,1186,1196,1198,1199,1200,1201,1202,1203,1204,1214,1223,1245,1274,1275,1278,1279,1280,1281,1282,1283,1287,1288,1291],thing:[43,1245],those:[40,41,979,993,1079,1093,1102,1108,1133],though:43,threshold:[979,1038,1040],through:[40,41],tickbox:43,tile:[289,559,688,979],time:[979,1067,1079,1082,1086,1129,1130,1131,1132,1133,1189,1190,1214,1224,1262,1273,1274,1275,1291],time_chronolog:[1233,1234,1239],time_infer:[1233,1234],timeout:[40,41,42,905,914,915,979,1047,1055,1133],timestep:[1214,1224,1262,1271],timing_fnam:[1233,1234],titl:1245,tmp_dir:979,tmp_dr:[979,1056],to_appli:[40,41],to_clon:[905,1133],to_dev:[40,41,119,283,430,552,680,905],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[905,1133],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1245],to_ivy_modul:[192,818,1245,1251],to_json:[40,41],to_kv_fn:[1214,1225],to_kv_v:[1214,1225],to_list:[40,41,432,688,979],to_multi_dev:[40,41],to_mut:[1177,1179,1186],to_n:[15,40,41,1245],to_nod:1133,to_numpi:[40,41,432,688,979,1245,1287],to_out_fn:[1214,1225],to_out_v:[1214,1225],to_q_fn:[1214,1225],to_q_v:[1214,1225],to_raw:[40,41],to_scalar:[432,688,979],todo:[43,1133],togeth:[40,41,1284,1285],tool:[1245,1288],top_mod:[1274,1275],topic:1291,torch:[43,903,904,1245,1287,1288,1291],torch_concat:1245,torchfcmodel:1287,total:[40,41,42,905,951,1133],total_mem_on_dev:905,total_mem_on_nod:1133,tpu:[905,952,1133],tpu_is_avail:[430,552,680,905,1133],tpye:[955,966],trace:[40,41,979,1031],track:[43,905,1133,1177,1186,1274,1275],track_submod_call_ord:[1274,1275],track_submod_ret:[1274,1275],trail:[1276,1277],train:[1079,1081,1082,1086,1245,1246],trainabl:[1079,1085,1245,1246,1251,1252,1274,1275,1284],trainer:1245,tran:1291,transform:[1214,1222,1223],transpos:[40,41,126,289,432,688,905,936,979,1133,1214,1216,1218,1220,1262,1264,1266,1268],travers:[15,18,19,40,41,1177,1186],treat:[40,41,903,904],tree_depth:1243,tree_height:1239,tri:[40,41],trigonometr:[839,842,1113,1114,1117,1125],trim_kei:[40,41],trust:[1079,1086,1278,1280],truth:[839,846,848,864,883,979,1008,1110,1111,1112],try_else_non:979,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[905,1133],tune_dev_alloc:905,tune_dev_split:905,tune_node_alloc:1133,tune_node_split:1133,tune_step:[905,1133],tupl:[15,16,17,18,19,40,41,43,388,389,390,832,833,834,851,852,853,854,860,861,862,903,904,979,997,1014,1015,1058,1077,1133,1177,1178,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1191,1196,1198,1199,1200,1201,1202,1203,1204],tutori:43,two:[40,41,979,982,987,1000,1037,1066,1102,1105,1108],type:[15,18,40,41,42,43,59,393,394,430,431,832,833,834,836,837,839,840,841,844,846,849,851,852,853,854,860,861,862,864,883,889,905,917,918,919,920,932,933,937,949,955,959,960,961,965,966,967,968,969,970,971,978,979,980,982,986,992,996,998,1008,1012,1013,1015,1024,1031,1043,1044,1045,1050,1059,1065,1075,1078,1079,1085,1090,1113,1121,1133,1239,1243,1245,1253,1255,1256,1258,1259,1261,1274,1275,1288],types_to_iteratively_nest:[40,41,42],uint8:[1095,1097,1101],uint8_img_to_float_img:1095,unchang:[15,16,17,18,19],uncom:43,underli:[839,841],underwai:43,unif:1133,unifi:[40,41,905,934,935,936,937,949,1133,1245],uniform:[40,41,1189,1190,1192,1193,1253,1255,1256,1259,1260],uniformli:[1189,1191,1193],unify_arrai:1133,unify_it:1133,unify_nest:1133,union:[15,18,19,40,41,43,388,389,390,391,393,394,832,833,834,835,836,837,839,840,841,842,843,844,845,846,847,848,849,851,852,853,854,857,858,860,861,862,864,883,889,903,904,905,923,928,929,930,931,949,950,955,959,960,961,965,966,967,968,969,970,971,978,979,980,981,982,984,985,986,987,988,990,992,993,994,995,996,997,999,1000,1001,1002,1005,1006,1007,1008,1010,1011,1012,1013,1014,1015,1016,1017,1021,1023,1024,1025,1032,1033,1034,1035,1037,1038,1039,1040,1043,1044,1045,1048,1049,1050,1051,1052,1057,1058,1059,1060,1061,1064,1066,1067,1069,1070,1071,1072,1074,1075,1076,1077,1078,1133,1177,1178,1179,1185,1186],uniqu:[905,914,915,1129,1130,1131,1132,1133,1177,1181],unique_kwarg:1133,unit:[43,905,1113,1114,1116,1133,1206,1207,1208,1209],unitari:[1102,1108],unless:[979,1043,1045,1078],unlik:[905,1133],unnorm:[1189,1190],unpack:[979,1074],unrol:[1214,1224],unset:1288,unset_debug_mod:44,unset_default_devic:905,unset_default_dtyp:955,unset_default_float_dtyp:955,unset_default_int_dtyp:955,unset_framework:[59,1288],unset_with_grad:1079,unstack:[40,41,126,289,432,559,688,979],until:43,unus:[903,904],updat:[40,41,432,460,461,905,914,979,1029,1051,1052,1079,1081,1082,1084,1086,1087,1088,1129,1130,1131,1133,1177,1182,1183,1187,1188,1214,1224,1245,1246,1251,1252,1278,1279,1280,1281,1282,1283,1288,1291],update_backend:[40,41],update_config:[40,41],update_inference_tim:1239,upper:[40,41,1189,1193],upper_depth:[1274,1275],upstream:43,usabl:[1245,1291],usag:[905,949,1133],use:[40,41,42,43,484,905,914,915,940,952,979,1048,1062,1063,1102,1107,1133,1214,1225,1231,1232,1245,1276,1277,1288,1291],used:[40,41,43,484,905,914,944,947,948,954,955,966,979,1019,1020,1036,1045,1051,1052,1053,1054,1078,1079,1086,1087,1102,1105,1129,1130,1131,1132,1133,1177,1186,1262,1273,1278,1280,1281,1287,1288],used_dev:[905,914],used_mem_on_dev:905,used_mem_on_nod:1133,used_node_str:1133,used_node_strs_dict:1133,useful:[40,41,905,949,1133,1214,1223,1245,1288],user:[1245,1262,1273,1274,1275,1288,1291],uses:1245,using:[40,41,1079,1081,1082,1177,1180,1184,1196,1197,1214,1222,1226,1245,1262,1270,1287,1288,1291],util:[905,938,1133],utility_funct:[860,861,862],v_with_top_v_key_chain:[1274,1275],val:[40,41,432,450,451,452,864,899,979,1027,1028,1029,1053,1054,1243],valid:[860,861,862,955,960,979,1062,1063,1214,1215,1216,1217,1218,1219,1220,1221,1262,1263,1264,1265,1266,1267,1268,1269],valid_dtyp:955,valu:[40,41,432,839,845,846,848,851,852,857,858,864,883,905,917,948,949,979,980,982,984,985,993,994,995,997,998,1004,1008,1014,1015,1016,1017,1032,1034,1035,1038,1040,1047,1048,1049,1050,1051,1052,1053,1054,1055,1072,1075,1076,1077,1079,1083,1086,1095,1101,1102,1108,1110,1111,1112,1113,1122,1123,1124,1129,1130,1131,1133,1177,1181,1182,1183,1187,1188,1189,1192,1193,1196,1198,1200,1214,1225,1226,1231,1232,1239,1262,1273,1276,1277,1278,1280],value_is_nan:979,vanilla:[1129,1131],var_shap:1253,variabl:[15,16,17,18,19,40,41,341,468,599,758,979,989,1027,1028,1029,1030,1031,1065,1079,1082,1083,1084,1085,1086,1087,1088,1090,1093,1129,1130,1131,1132,1214,1225,1231,1232,1251,1252,1253,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285],variable_data:[468,758,1079],varianc:[40,41,1196,1204,1291],varieti:1288,variou:[43,1245],vector:[40,41,477,480,851,852,979,995,1000,1102,1108,1109,1214,1223,1262,1272],vector_norm:[40,41,97,222,408,529,657,851],vector_to_skew_symmetric_matrix:[168,350,477,608,768,1102],verbos:1290,veri:[43,1245],verifi:43,version:43,via:[1177,1178,1185,1288],view:[1095,1100],vision:1245,visual:1288,volum:[1214,1219],vw_tm1:[1079,1082,1086],wai:[1288,1291],wait:[40,41,42],want:[1245,1288,1291],warn:[59,66,67,68,69,70],warp:[473,474,1095,1096],watch:1287,weight:[1079,1081,1082,1084,1086,1087,1088,1214,1223,1224,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1274,1275,1278,1280,1281],weight_initi:[1262,1263,1264,1265,1266,1267,1268,1269,1271,1272],weights_path:[1274,1275],well:[40,41,979,1023],were:[40,41,1133],what:[43,1245],when:[40,41,42,43,905,979,991,1063,1076,1102,1108,1133,1245,1274,1275,1288,1291],where:[40,41,43,289,432,688,839,845,860,861,862,864,889,979,982,990,993,997,1010,1025,1032,1043,1077,1102,1108,1177,1178,1185,1189,1190],wherea:43,wherebi:[1177,1186],whether:[15,18,19,40,41,42,860,861,862,903,904,905,923,936,940,944,949,952,954,955,965,969,970,971,978,979,981,987,988,1001,1004,1009,1014,1021,1023,1026,1030,1031,1036,1057,1065,1074,1075,1079,1082,1083,1084,1085,1086,1087,1088,1090,1129,1130,1131,1132,1133,1177,1178,1179,1181,1185,1186,1189,1190,1206,1207,1214,1222,1245,1251,1252,1262,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283],which:[40,41,42,43,484,832,833,834,835,836,837,851,852,853,854,860,861,862,903,904,905,914,915,923,928,929,930,931,934,935,936,937,939,941,945,947,948,949,955,960,965,969,978,979,982,986,996,998,1000,1001,1002,1004,1011,1015,1016,1017,1018,1024,1025,1033,1034,1035,1042,1043,1044,1045,1046,1048,1051,1052,1060,1064,1074,1076,1078,1079,1082,1083,1084,1086,1087,1088,1090,1092,1093,1095,1097,1102,1105,1113,1118,1133,1177,1181,1182,1183,1187,1188,1189,1190,1191,1192,1193,1196,1198,1199,1200,1201,1202,1203,1204,1206,1211,1214,1225,1226,1245,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1284,1285,1287,1288],whitespac:[40,41,42],whose:[43,839,840,853,854,864,889,979,986,991,1196,1197,1198,1199,1200,1202,1204],why:[1245,1246],width:[1095,1100],wiki:1291,wikipedia:1291,window:[1095,1100,1214,1215,1216,1217,1218,1219,1220,1221,1262,1263,1264,1265,1266,1267,1268,1269],wise:[40,41,43,839,841,842,846,848,864,883,889,979,992,993,1008,1012,1013,1038,1040,1050,1079,1082,1084,1086,1088,1110,1111,1112,1113,1114,1116,1117,1118,1121,1122,1123,1124,1125,1127,1206,1207,1208,1209,1210,1211,1212,1213],wish:1288,with_arg_label:[1233,1235,1239,1274,1275],with_array_cach:[1233,1234,1235,1239],with_bia:[1262,1272],with_cal:[979,1004],with_default_key_color:[40,41],with_edge_label:[1233,1235,1239,1274,1275],with_entries_as_list:[40,41],with_grad:[1079,1089,1274,1275],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1133,with_output_label:[1233,1235,1239,1274,1275],with_partial_v:[1274,1275],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,432,463,979,1060,1133],with_to_kv_fn:[1262,1273],with_to_out_fn:[1262,1273],with_to_q_fn:[1262,1273],within:[15,18,19,979,982,1102,1108,1189,1193],without:[40,41,43,979,1047,1049,1055,1177,1179,1288],wonder:1245,word:[15,16,17,979,982,1189,1193,1251,1252],work:[43,1287],worker:[905,914,915,1133],worker_class:[905,914,915,1133],worker_kwarg:1133,would:[43,857,858,1206,1211,1245,1288,1291],wrap:[15,40,41,42,43,430,432,468,473,477,481,482,484,979,991,1079,1093,1245],wrapper:43,write:[40,41,43,1245,1246,1291],written:[43,1245,1291],ws_new:[1079,1082,1084,1086,1087,1088],x1_i:[839,841,846,979,1008,1113,1121],x2_i:[839,841,846,979,1008,1113,1121],x_feat_dim:[1214,1225],x_i:[839,840,844,849,979,1059],x_in:[1245,1287],x_inv:[1102,1104],x_max:[432,979,993],x_min:[432,979,993],x_sub:1133,xkk:1291,xkkm1:1291,xkm1km1:1291,xs0:1133,xs_t:1133,year:[1245,1291],yet:[1177,1186,1291],yield:[979,1076],you:[43,1245,1287,1288,1291],your:[1245,1246,1287,1288,1291],your_awesome_project:1288,yourself:[43,1245],yourslef:43,youtub:43,zero:[40,41,77,206,388,509,637,832,851,852,860,861,862,979,997,1043,1045,1051,1052,1077,1078,1079,1081,1082,1086,1087,1214,1222,1245,1253,1262,1263,1264,1265,1266,1267,1268,1269,1270,1272,1278,1279,1280,1281],zero_pad:[289,432,559,688,979],zeros_lik:[126,289,432,559,688,979],zip:1133,zk_e:1291},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","sign","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","sign","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","sign","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","sign","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","sign","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","sign","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1004,"function":[77,80,85,96,99,101,102,103,105,106,206,209,214,221,224,226,227,228,230,231,388,391,396,407,410,412,413,414,416,417,509,512,517,528,531,533,534,535,537,538,637,640,645,656,659,661,662,663,665,666,832,835,839,850,853,855,856,857,859,860],Ones:1258,Using:1288,abs:[290,560,689,980],aco:[780,1114],acosh:[781,1115],activ:[190,375,495,629,810,1206,1248],adam:1279,adam_step:1081,adam_upd:1082,algebra:[97,168,222,350,408,477,529,608,657,768,851],all:[107,232,418,539,667,861],all_equ:981,all_nested_indic:1178,ani:[108,233,419,540,668,862],api:[0,43,75,110,204,235,386,421,507,542,635,670,830],arang:[127,291,433,561,690,982],arg_nam:983,argmax:[128,434,562,691,984],argmin:[129,435,563,692,985],args_to_ivi:16,args_to_n:17,argsort:[104,229,415,536,664,858],arithmet:[1,111,236,422,543,671],arrai:[0,3,43,75,109,110,112,130,204,234,235,237,244,292,386,420,421,423,436,507,541,542,544,564,635,669,670,672,693,830,864,986],array_equ:[293,694,987],arrays_equ:988,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[782,1116],asinh:[86,397,518,646,840],assert_supports_inplac:989,atan2:[784,1118],atan:[783,1117],atanh:[785,1119],attribut:[5,113,238,424,545,673],backend:[43,73],bilinear_resampl:[165,347,474,605,765,1096],binary_cross_entropi:1228,bitwis:[7,114,239,425,546,674],bitwise_and:[87,215,398,519,647,841],broadcast_to:[294,695,990],builder:51,builtin:[109,234,244,420,541,669,864],builtin_ab:[245,865],builtin_add:[246,866],builtin_and:[247,867],builtin_bool:[248,868],builtin_contain:[249,869],builtin_deepcopi:[250,870],builtin_dir:[251,871],builtin_eq:[252,872],builtin_float:[253,873],builtin_floordiv:[254,874],builtin_g:[255,875],builtin_getattr:[256,876],builtin_getattribut:[257,877],builtin_getitem:[258,878],builtin_gt:[259,879],builtin_int:[260,880],builtin_invert:[261,881],builtin_l:[262,882],builtin_lt:[263,548,676,883],builtin_mul:[264,884],builtin_n:[265,885],builtin_neg:[266,886],builtin_or:[267,887],builtin_po:[268,888],builtin_pow:[269,889],builtin_radd:[270,890],builtin_rand:[271,891],builtin_rfloordiv:[272,892],builtin_rmul:[273,893],builtin_ror:[274,894],builtin_rpow:[275,895],builtin_rsub:[276,896],builtin_rtruediv:[277,897],builtin_rxor:[278,898],builtin_setitem:[279,899],builtin_sub:[280,900],builtin_truediv:[281,901],builtin_xor:[282,902],cache_fn:991,cast:[131,295,437,565,696,959],ceil:[296,697,992],choleski:[769,1103],choose_random_framework:61,citat:1245,clear_framework_stack:62,clear_mem_on_dev:[682,921],clip:[297,698,993],clip_matrix_norm:994,clip_vector_norm:995,clone:1148,clone_arrai:1149,clone_it:1150,clone_nest:1151,clonedit:1135,cloneditem:1134,clonednest:1136,closest_valid_dtyp:960,code:1291,comparison:[9,115,240,426,547,675],compil:[298,438,699,903,904,1233],compile_graph:1234,concaten:[132,299,439,566,700,996],constant:[76,205,387,508,636,831],constant_pad:[300,567,701,997],contain:[40,41],container_typ:[702,998],content:1245,contribut:43,conv1d:[196,378,499,822,1215,1263],conv1d_transpos:[197,379,500,823,1216],conv1dtranspos:1264,conv2d:[198,380,501,631,824,1217,1265],conv2d_transpos:[199,381,502,825,1218],conv2dtranspos:1266,conv3d:[200,382,503,632,826,1219,1267],conv3d_transpos:[201,383,504,827,1220],conv3dtranspos:1268,convers:15,convert:[192,818,1251],convert_dtyp:961,copy_arrai:[703,999],copy_nest:1179,core:[118,243,429,551,679,863],cos:[88,399,520,648,842],cosh:[89,400,521,649,786,843,1120],cprint:1290,creat:43,creation:[77,206,388,509,637,832],cross:[301,704,1000],cross_entropi:1229,cumprod:[133,302,440,705,1001],cumsum:[706,1002],current_framework:63,current_framework_str:[707,1003],data:[80,84,209,213,391,395,512,516,640,644,835,838],debug_mod:45,debugg:44,default_devic:922,default_dtyp:962,default_float_dtyp:963,default_int_dtyp:964,default_nod:1152,depthwise_conv2d:[202,384,505,633,828,1221],depthwiseconv2d:1269,design:43,dev:[121,285,554,683,923],dev_clon:924,dev_clone_arrai:925,dev_clone_it:926,dev_clone_nest:927,dev_dist:928,dev_dist_arrai:929,dev_dist_it:930,dev_dist_nest:931,dev_from_str:[122,286,555,684,932],dev_to_str:[123,287,556,685,933],dev_unifi:934,dev_unify_arrai:935,dev_unify_it:936,dev_unify_nest:937,dev_util:938,devclonedit:908,devcloneditem:907,devclonednest:909,devdistit:911,devdistitem:910,devdistnest:912,devic:[20,119,283,430,552,680,905],devmapp:914,devmappermultiproc:915,distribute_nest:1153,divid:1121,document:1245,dropout:[1222,1270],dtype:[134,303,441,568,708,955,965],dtype_bit:[135,304,442,569,709,966],dtype_from_str:[136,305,443,570,710,967],dtype_to_str:[137,306,444,571,711,968],ecosystem:52,einops_rearrang:1005,einops_reduc:1006,einops_repeat:1007,einsum:[182,366,487,621,802,1197],elementwis:[85,214,396,517,645,839],equal:[572,712,1008],erf:[483,787,1122],execute_with_gradi:[162,342,469,600,759,1083],exist:1009,exp:[788,1123],expand_dim:[307,713,1010],finfo:[82,211,393,514,642,836],firstlayersiren:1255,flip:[100,225,411,532,660,854,1011],float_img_to_uint8_img:1097,floor:[308,714,1012],floormod:[309,715,1013],fomaml_step:1130,fork:43,fourier_encod:1014,framework:59,full:[138,310,445,573,716,1015],func:72,gather:[139,311,446,574,717,1016],gather_nd:[140,312,447,575,718,1017],geglu:1249,gelu:[376,496,811,1207,1250],gener:[22,126,289,432,559,688,979],get_all_arrays_in_memori:1018,get_all_arrays_on_dev:939,get_framework:64,get_min_bas:1019,get_min_denomin:1020,get_num_dim:[719,1021],get_referrers_recurs:1022,global:1236,glorotuniform:1256,gpu_is_avail:[940,1154],gradient:[24,161,341,468,599,758,1079],gradient_descent_upd:1084,gradient_imag:[166,348,475,606,766,1098],graph:1239,gym:53,handler:59,has_nan:1023,helper:1241,ident:[141,313,448,576,720,1024],iinfo:[83,212,394,515,643,837],imag:[26,164,346,473,604,764,1095],index_nest:1180,indices_wher:[142,314,449,721,1025],initi:1253,inplac:[11,116,241,427,549,677],inplace_arrays_support:1026,inplace_decr:[143,315,450,577,722,1027],inplace_incr:[144,316,451,578,723,1028],inplace_upd:[145,317,452,579,724,1029],inplace_variables_support:1030,inv:[770,1104],invalid_dtyp:969,is_arrai:[146,318,453,580,725,1031],is_float_dtyp:970,is_int_dtyp:971,is_vari:[163,343,470,601,760,1085],isfinit:[90,147,216,319,401,454,522,581,650,726,844],isinf:[320,582,727,1032],isnan:[91,217,402,523,651,845],ivi:[43,50,51,52,53,54,55,56,57,58,829,1287,1288,1291],ivymodul:[193,819],jax:74,keep:43,lamb:1280,lamb_upd:1086,lar:1281,lars_upd:1087,layer:[195,377,498,630,821,1214,1262],layer_norm:1232,layernorm:1277,leaky_relu:[812,1208],less:[92,218,403,524,652,846],linalg:[28,1102],linear:[97,168,222,350,408,477,529,608,657,768,851,1223,1272],linear_resampl:[148,321,455,583,728,1033],linspac:[149,322,456,584,729,1034],log2:[93,404,525,653,847],log:[789,1124,1242],log_global_inference_abs_tim:1237,log_global_inference_rel_tim:1238,logic:[30,172,356,481,613,776,1110],logical_and:[357,777,1111],logical_not:[94,219,405,526,654,848],logical_or:[358,778,1112],logspac:[150,323,457,585,730,1035],loss:1227,lstm:1271,lstm_updat:1224,maml_step:1131,manipul:[99,224,410,531,659,853],map:1181,map_nest_at_index:1182,map_nest_at_indic:1183,match_kwarg:1036,math:[32,173,359,482,614,779,1113],matmul:[324,586,731,1037],matrix_norm:[169,351,478,609,771,1105],maximum:[732,1038],mech:54,memori:55,meshgrid:[325,733,1039],meta:[34,1129],method:[96,221,407,528,656,850],minimum:[734,1040],model:56,modul:[1274,1275,1287],multi:1133,multi_head_attent:1225,multi_index_nest:1184,multidevcontain:42,multidevit:918,multidevitem:917,multidevnest:919,multiheadattent:1273,multinodeit:1139,multinodeitem:1138,multinodenest:1140,multinomi:[175,361,485,616,795,1190],multiprocess:[735,1041],mxnet:203,nativ:1287,nest:1177,nested_indices_wher:1185,nested_map:1186,network:1287,next:1245,node:[1133,1155],node_dist:1156,node_dist_arrai:1157,node_dist_it:1158,node_str:1159,node_to_str:1160,node_util:1161,nodedistit:1142,nodedistitem:1141,nodedistnest:1143,nodemapp:1145,nodemappermultiproc:1146,norm:[1231,1276],num_arrays_in_memori:1042,num_arrays_on_dev:941,num_cpu_cor:942,num_gpu:[124,943,1162],numpi:385,nutshel:1245,one_hot:[151,458,587,736,1043],ones:[78,207,389,510,638,833,1044],ones_lik:[152,326,459,588,737,1045],oper:[1,3,7,9,11,13,43,111,112,114,115,116,117,236,237,239,240,241,242,422,423,425,426,427,428,543,544,546,547,549,550,671,672,674,675,677,678],optim:[1278,1282],optimizer_upd:1088,overview:1245,param:1243,percent_used_mem_on_dev:944,percent_used_mem_on_nod:1163,pinv:[352,772,1106],portabl:1291,print_all_arrays_in_memori:1046,print_all_arrays_on_dev:945,profil:[120,284,431,553,681,920,1147],pull:43,queue_timeout:1047,randint:[176,362,617,796,1191],random:[36,174,360,484,615,794,1189],random_crop:1099,random_norm:[177,363,618,797,1192],random_uniform:[178,364,619,798,1193],reduce_max:[183,367,488,622,803,1198],reduce_mean:[184,368,489,623,804,1199],reduce_min:[185,369,490,624,805,1200],reduce_prod:[186,370,491,625,806,1201],reduce_std:[371,1202],reduce_sum:[187,372,492,626,807,1203],reduce_var:[188,373,493,627,808,1204],reduct:[38,181,365,486,620,801,1196],reflect:[13,117,242,428,550,678],relu:[813,1209],repeat:[327,738,1048],reptile_step:1132,request:43,reshap:[739,1049],robot:57,round:[328,740,1050],run:1288,scaled_dot_product_attent:1226,scatter_flat:[153,329,460,589,741,1051],scatter_nd:[154,330,461,590,742,1052],search:[101,226,412,533,661,855],seed:[179,799,1194],sequenti:[1284,1285],set:[102,227,413,534,662,856],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:946,set_default_dtyp:972,set_default_float_dtyp:973,set_default_int_dtyp:974,set_default_nod:1164,set_exception_debug_mod:48,set_framework:65,set_min_bas:1053,set_min_denomin:1054,set_nest_at_index:1187,set_nest_at_indic:1188,set_queue_timeout:1055,set_split_factor:[947,1165],set_tmp_dir:1056,set_with_grad:1089,sgd:1283,shape:[743,1057],shape_to_tupl:1058,show_graph:1235,shuffl:[180,800,1195],sigmoid:[814,1210],sign:[155,331,462,591,744,1059],signatur:[96,221,407,528,656,850],sin:[790,1125],sinh:[791,1126],siren:1259,softmax:[191,497,815,1211],softplu:[816,1212],sort:[103,228,414,535,663,857],sparse_cross_entropi:1230,split:[156,332,463,592,745,1060],split_factor:[948,1166],split_func_cal:[949,1167],sqrt:[95,220,406,527,655,849],squeez:[157,333,464,593,746,1061],stable_divid:1062,stable_pow:1063,stack:[334,747,1064],stack_imag:[167,349,476,607,767,1100],standard:43,statist:[105,230,416,537,665,859],stop_gradi:[344,471,602,761,1090],str_to_nod:1168,submodul:43,supports_inplac:1065,svd:[354,611,774,1108],swapax:[594,748,1066],tan:[792,1127],tanh:[793,817,1128,1213],tensorflow:506,tile:[335,595,749,1067],tmp_dir:1068,to_dev:[125,288,557,686,950],to_ivi:18,to_ivy_modul:[194,820,1252],to_list:[750,1069],to_n:19,to_nod:1169,to_numpi:[751,1070],to_scalar:[752,1071],torch:634,total_mem_on_dev:951,total_mem_on_nod:1170,tpu_is_avail:[558,687,952,1171],train:1287,trainabl:1287,transpos:[158,336,465,753,1072],tree:1245,try_else_non:1073,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[80,84,209,213,391,395,512,516,640,644,835,838],uint8_img_to_float_img:1101,unifi:1172,unify_arrai:1173,unify_it:1174,unify_nest:1175,unset_debug_mod:49,unset_default_devic:953,unset_default_dtyp:975,unset_default_float_dtyp:976,unset_default_int_dtyp:977,unset_framework:71,unset_with_grad:1091,unstack:[159,337,466,596,754,1074],updat:43,used_mem_on_dev:954,used_mem_on_nod:1176,util:[106,231,417,538,666,860],valid_dtyp:978,value_is_nan:1075,variabl:[345,472,603,762,1092],variable_data:[763,1093],vector_norm:[98,223,409,530,658,852],vector_to_skew_symmetric_matrix:[171,355,480,612,775,1109],verbos:1289,vision:58,where:[338,755,1076,1245],why:1291,with_grad:1094,wrapper:72,write:1288,your:43,zero:[79,208,390,511,639,834,1261],zero_pad:[339,597,756,1077],zeros_lik:[160,340,467,598,757,1078]}})